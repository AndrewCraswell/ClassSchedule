<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CtcOdsApi</name>
    </assembly>
    <members>
        <member name="T:Ctc.Ods.DaysFacet">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.ISectionFacet">
            <summary>
            Provides a common interface for defining live filters (e.g. <i>facets</i>)
            </summary>
        </member>
        <member name="M:Ctc.Ods.ISectionFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="M:Ctc.Ods.DaysFacet.#ctor(Ctc.Ods.DaysFacet.Options)">
            <summary>

            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Ctc.Ods.DaysFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <note>This method assumes that the <b>Title</b> field in the database contains unique values AND the existence of certain values.</note>
            <param name="dbContext"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dbContext"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">A valid option value was not specified when the class was instantiated.</exception>
        </member>
        <member name="M:Ctc.Ods.DaysFacet.GetDaysTitle">
            <summary>

            </summary>
            <returns></returns>
        </member>
        <member name="T:Ctc.Ods.DaysFacet.Options">
            <summary>
            Options for which <see cref="T:Ctc.Ods.Types.Section"/>s to include
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.All">
            <summary>
            All days
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Ctc.Ods.DaysFacet.Options.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.CourseEntity">
            <summary>
            Internal entity object for use in database access
            </summary>
            <remarks>
            DO NOT USE THIS CLASS IN YOUR CODE.  Use <see cref="T:Ctc.Ods.Types.ICourse"/> objects.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.Settings">
            <summary>
            Provides access to configuration <see cref="T:Ctc.Ods.Config.ApiSettings"/>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.UniqueId">
            <summary>
            A unique record ID - required by Entity Framework
            </summary>
            <remarks>
            WARNING: This value is guaranteed to be unique for each record in the database,
            but IS NOT guaranteed to remain constant for each record - DO NOT rely on this
            value to reference any given record.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.CourseID">
            <summary>
            The unique ID for the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.Title1">
            <summary>
            Short title of the course (e.g. Beginning Art)
            </summary>
            <seealso cref="P:Ctc.Ods.Data.CourseEntity.Title2"/>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.Title2">
            <summary>
            Alternate title of the course
            </summary>
            <seealso cref="P:Ctc.Ods.Data.CourseEntity.Title1"/>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.Credits">
            <summary>
            Number of credits earned upon completion of the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.YearQuarterBegin">
            <summary>
            The <see cref="T:Ctc.Ods.Types.YearQuarter"/> that this <see cref="T:Ctc.Ods.Types.Course"/> is/was first offered
            </summary>
            <remarks>
            If not specified in the ODS, YearQuarterBegin defaults <see cref="!:ApiSettings.YearQuarter.Min"/> so that
            it will be sure to come before any valid YRQ value during comparisons, etc.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.YearQuarterEnd">
            <summary>
            The last <see cref="T:Ctc.Ods.Types.YearQuarter"/> that this <see cref="T:Ctc.Ods.Types.Course"/> is/was last offered
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.VariableCredits">
            <summary>
            Identifies whether or not <see cref="T:Ctc.Ods.Data.SectionEntity">Section</see>s may be offered for
            varying <see cref="P:Ctc.Ods.Data.SectionEntity.Credits">Credit</see> amounts
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.FootnoteID1">
            <summary>
            Identifies a <see cref="T:Ctc.Ods.Types.Footnote"/> associated with this <see cref="T:Ctc.Ods.Data.CourseEntity">Course</see>
            </summary>
            <remarks>
            The HP3000 allows two footnotes per Course.
            </remarks>
            <seealso cref="P:Ctc.Ods.Data.CourseEntity.FootnoteID2"/>
        </member>
        <member name="P:Ctc.Ods.Data.CourseEntity.FootnoteID2">
            <summary>
            Identifies a <see cref="T:Ctc.Ods.Types.Footnote"/> associated with this <see cref="T:Ctc.Ods.Data.CourseEntity">Course</see>
            </summary>
            <remarks>
            The HP3000 allows two footnotes per Course.
            </remarks>
            <seealso cref="P:Ctc.Ods.Data.CourseEntity.FootnoteID1"/>
        </member>
        <member name="T:Ctc.Ods.Customizations.PeninsulaCollegeCourseDescriptionStrategy">
            <summary>
            Implements Peninsula College's business logic for determining a <see cref="T:Ctc.Ods.Types.Course"/>'s description(s)
            </summary>
        </member>
        <member name="T:Ctc.Ods.Customizations.ICourseDescriptionStrategy">
            <summary>
            Defines a class which encapsulates the business logic for retrieving <see cref="T:Ctc.Ods.Types.Course"/> descriptions.
            </summary>
            <remarks>
            This customization point was implemented by following the <a href="http://www.dofactory.com/Patterns/PatternStrategy.aspx"><i>Strategy</i> design pattern</a>.
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Customizations.ICourseDescriptionStrategy.GetDescriptions(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter)">
            <summary>
            Retrieves current and future course descriptions from the database
            </summary>
            <param name="courseId">The course ID to retrieve the description for.</param>
            <param name="yrq">
		The <see cref="T:Ctc.Ods.Types.YearQuarter"/> to retrieve the description for. If not supplied, will default to the
		<see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>.
            </param>
            <remarks>
		<para>
		This interface provides a customization point for schools to provide their own business logic
		for retrieving current and future course descriptions from the ODS. It was necessary to create
		this customization because the HP (and thus the ODS) contains two course description tables
		(<i>CourseDescription</i> and <i>CourseDescription2</i> in the ODS), and different schools
		utilize these in different ways.
		</para>
		<note type="important">
		For compatibility, schools implementing <see cref="T:Ctc.Ods.Customizations.ICourseDescriptionStrategy"/> should ensure
		that their implementation returns records in the expected order.
		</note>
            </remarks>
            <returns>
            A collection of <see cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase">course description entites</see>:
            <list type="table">
		<item>
			<term>First record</term>
			<description>
				The course description for the specified <paramref name="yrq"/> (or <see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>
				if not supplied.
			</description>
		</item>
		<item>
			<term>Successive records</term>
			<description>
				Future course description updates, in the order they will be updated (by YearQuarter).
			</description>
		</item>
            </list>
            </returns>
        </member>
        <member name="M:Ctc.Ods.Customizations.PeninsulaCollegeCourseDescriptionStrategy.#ctor(System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescription1Entity},System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescription2Entity})">
            <summary>
            Encapsulates Peninsula College's business logic for retrieving course descriptions
            </summary>
            <param name="PCdescriptionsEntity1">A collection of <see cref="T:Ctc.Ods.Types.Course"/> descriptions from the first table in the ODS.</param>
            <param name="PCdescriptionsEntity2">A collection of <see cref="T:Ctc.Ods.Types.Course"/> descriptions from the second table in the ODS.</param>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription1Entity"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription2Entity"/>
        </member>
        <member name="M:Ctc.Ods.Customizations.PeninsulaCollegeCourseDescriptionStrategy.GetDescriptions(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter)">
            <summary>
            Retrieves current and future course descriptions from the database
            </summary>
            <param name="courseId">The course ID to retrieve the description for.</param>
            <param name="yrq">
		The <see cref="T:Ctc.Ods.Types.YearQuarter"/> to retrieve the description for. If not supplied, will default to the
		<see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>.
            </param>
            <returns>
            A collection of <see cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase">course description entites</see>:
            <list type="table">
		<item>
			<term>First record</term>
			<description>
				The course description for the specified <paramref name="yrq"/> (or <see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>
				if not supplied.
			</description>
		</item>
		<item>
			<term>Successive records</term>
			<description>
				Future course description updates, in the order they will be updated (by YearQuarter).
			</description>
		</item>
            </list>
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="yrq"/> is null.</exception>
        </member>
        <member name="T:Ctc.Ods.Types.Course">
            <summary>
            Defines a college course offered to students
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.ICourse">
            <summary>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.CourseID">
            <summary>
            The unique ID for the course
            </summary>
            <remarks>
            This is a combination of the <see cref="P:Ctc.Ods.Types.ICourse.Subject"/> and <see cref="P:Ctc.Ods.Types.ICourse.Number"/>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.Subject">
            <summary>
            Departmental prefix for the course (e.g. ART)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.ICourse.Number"/>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.Number">
            <summary>
            The (typically numeric) identifier for the course (e.g. 101)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.ICourse.Subject"/>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.Title">
            <summary>
            Short title of the course (e.g. Beginning Art)
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.Descriptions">
            <summary>
            One or more long descriptions (defined by <see cref="P:Ctc.Ods.Types.ICourseDescription.YearQuarterBegin">begin date</see>) for the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.Credits">
            <summary>
            Number of credits earned upon completion of the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourse.IsCommonCourse">
            <summary>
            Indicates whether this is a <a href="http://www.sbctc.ctc.edu/college/e_commoncoursenumbering.aspx">Common Course</a>
            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.Course.Equals(Ctc.Ods.Types.Course)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.Course.Equals(Ctc.Ods.Types.ICourse)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.Course.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.Course.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.Course.op_Equality(Ctc.Ods.Types.Course,Ctc.Ods.Types.Course)">
            <summary>
            Operator overload to check equality of two <see cref="T:Ctc.Ods.Types.Course"/> objects
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Course.op_Inequality(Ctc.Ods.Types.Course,Ctc.Ods.Types.Course)">
            <summary>
            Operator overload to check inequality of two <see cref="T:Ctc.Ods.Types.Course"/> objects
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Patterns">
            <summary>
            Provides a reference to configuration settings
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Types.Course.CourseID">
            <summary>
            The unique ID for the course
            </summary>
            <remarks>
            This is a combination of the <see cref="P:Ctc.Ods.Types.Course.Subject"/> and <see cref="P:Ctc.Ods.Types.Course.Number"/>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Subject">
            <summary>
            Departmental prefix for the course (e.g. ART)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.Course.Number"/>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Number">
            <summary>
            The (typically numeric) identifier for the course (e.g. 101)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.Course.Subject"/>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Title">
            <summary>
            Short title of the course (e.g. Beginning Art)
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Descriptions">
            <summary>
            One or more long descriptions (defined by <see cref="P:Ctc.Ods.Types.ICourseDescription.YearQuarterBegin">begin date</see>) for the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Credits">
            <summary>
            Number of credits earned upon completion of the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course.IsCommonCourse">
            <summary>
            Indicates whether this is a <a href="http://www.sbctc.ctc.edu/college/e_commoncoursenumbering.aspx">Common Course</a>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course.IsVariableCredits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course.Footnotes">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course._CourseDescriptions1">
            <summary>
            Allows EF + LINQ to attach course descriptions
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course._CourseDescriptions2">
            <summary>
            Allows EF + LINQ to attach course descriptions
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course._YearQuarter">
            <summary>
            Allows EF + LINQ to attach the year/quarter
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Course._Footnotes">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.IFootnote">
            <summary>
             Contains additional information about the associated <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
             <remarks>
             This is where information such as pre-requisites, fees, etc. can be found.
             </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.IFootnote.FootnoteId">
            <summary>
            Unique field that maps to FootNoteID in Class
            </summary>
            <remarks>
            This field looks like its filled with gibberish, but seems to be unique
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.IFootnote.FootnoteText">
            <summary>
            Footnote text
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.IFootnote.ColCode">
            <summary>
            College Code ID
            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.OdsRepository">
            <summary>
            Provides acccess to ODS data
            </summary>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.#ctor">
            <summary>
            Creates a new Repository instance for accessing data from the ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.#ctor(System.Web.HttpContextBase)">
            <summary>
            Creates a new Repository instance for accessing data from the ODS
            </summary>
            <param name="context">
		The <see cref="T:System.Web.HttpContextBase">HttpContext</see> of the calling application. This can be used
		to obtain information about the currently executing context, store information in context-based
		<i>state bags</i>, etc.
            </param>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetRegistrationQuarters(System.Int32)">
            <summary>
            Gets a list of <see cref="T:Ctc.Ods.Types.YearQuarter"/>s, starting with the current registration quarter
            </summary>
            <param name="count">Total number of <see cref="T:Ctc.Ods.Types.YearQuarter"/>s to return.</param>
            <returns>A list of <see cref="T:Ctc.Ods.Types.YearQuarter"/> objects, with the first being the current registration quarter.</returns>
            <seealso cref="P:Ctc.Ods.Data.OdsRepository.CurrentRegistrationQuarter"/>
            <seealso cref="P:Ctc.Ods.Config.ApiSettings.YearQuarter"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourses(System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieves all courses from the database
            </summary>
            <returns></returns>
            <remarks>
		<example>
			<code>
            using (OdsRepository repository = new OdsRepository())
            {
		IEnumerable&lt;Course&gt; courses = repository.GetCourses();
            }
			</code>
		</example>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourses(System.String,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            </summary>
            <param name="subject"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourses(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>

            </summary>
            <param name="subjects"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourses(Ctc.Ods.Types.ICourseID,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
             <summary>
             Retrieves the specified course from the database
             </summary>
             <param name="courseId"></param>
            <param name="facetOptions"></param>
            <returns></returns>
             <remarks>
             NOTE: This may return more than one <see cref="T:Ctc.Ods.Types.Course"/> record.

             <example>
			<code>
             using (OdsRepository repository = new OdsRepository())
		{
			IEnumerable&lt;Course&gt; courses = repository.GetCourses(CourseID.FromString("art 101"));
             }
			</code>
             </example>
             </remarks>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourseDescription(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter)">
            <summary>
            Retrieves specified course description from database
            </summary>
            <param name="courseID"></param>
            <param name="yrq"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetAllCourses(Ctc.Ods.Types.YearQuarter,Ctc.Ods.Types.ICourseID,System.String[])">
            <summary>

            </summary>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieves an <see cref="T:System.Collections.IList"/> of <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieves an <see cref="T:System.Collections.IList"/> of <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
            <param name="yrq"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>

            </summary>
            <param name="courseId"></param>
            <param name="yrq"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(System.String,Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieve all Sections for a specified <see cref="P:Ctc.Ods.Types.Course.Subject"/>
            </summary>
            <param name="subject">The <see cref="T:Ctc.Ods.Types.Course"/> <see cref="P:Ctc.Ods.Types.Course.Subject"/> which you want to retrieve all Sections for.</param>
            <param name="yrq"><b>(OPTIONAL)</b> Filter results so they only include Sections in this YearQuarter</param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(System.Collections.Generic.IList{System.String},Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>

            </summary>
            <param name="subjects"></param>
            <param name="yrq"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(System.Collections.Generic.IList{Ctc.Ods.Types.ISectionID},System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieve all Sections specified in the provided list of <see cref="T:Ctc.Ods.Types.SectionID"/>s
            </summary>
            <param name="sectionIds"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(System.Collections.Generic.IList{Ctc.Ods.Types.ICourseID},Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
            <summary>
            Retrieve all Sections specified in the provided list of <see cref="T:Ctc.Ods.CourseID"/>s
            </summary>
            <param name="courseIds"></param>
            <param name="yrq"></param>
            <param name="facetOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetSections(Ctc.Ods.Data.OdsRepository.SectionFilters)">
            <summary>
            Converts a collection of <see cref="T:Ctc.Ods.Data.SectionEntity"/>s into a collection of <see cref="T:Ctc.Ods.Types.Section"/> objects
            </summary>
            <param name="filters"></param>
            <returns></returns>
            <remarks>
            Performing this convertion allows us to construct a richer, multi-level <see cref="T:Ctc.Ods.Types.Section"/> object unconstrained
            by database-imposed relationship structures.
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourseSubjects">
            <summary>
            Returns an unfiltered list of all Course Subjects from the CoursePrefix table
            </summary>
            <remarks>
            This list is filtered to only include <see cref="T:Ctc.Ods.Types.Course"/> subjects which only have active courses
            in the current and/or future <see cref="T:Ctc.Ods.Types.YearQuarter"/>s.
            </remarks>
            <returns>List of CoursePrefix including Title and Subject</returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourseSubjects(System.Char)">
            <summary>
            Returns filtered list of all Course Subjects by the first character in Title
            </summary>
            <param name="firstChar">The first character in Subject to search by</param>
            <remarks>
            This list is filtered to only include <see cref="T:Ctc.Ods.Types.Course"/> subjects which only have active courses
            in the current and/or future <see cref="T:Ctc.Ods.Types.YearQuarter"/>s.
            </remarks>
            <returns>Filtered list of CourseSubjects by the supplied char</returns>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourseSubjects(Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IList{Ctc.Ods.ISectionFacet})">
		<summary>
             Returns a list of Course Subjects which have active <see cref="T:Ctc.Ods.Types.Section"/>s for
             the <see cref="T:Ctc.Ods.Types.YearQuarter"/> specified
		</summary>
		<param name="yrq"></param>
            <param name="facetOptions"></param>
            <returns></returns>
		<exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.Dispose">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.Dispose(System.Boolean)">
            <summary>

            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.GetCourseDescriptions(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter,System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescriptionEntityBase}[])">
            <summary>
            Uses the configured <see cref="T:Ctc.Ods.Customizations.ICourseDescriptionStrategy"/> to determine the description(s) for the specified course
            </summary>
            <param name="courseID">The ID of the course we want description(s) for</param>
            <param name="yrq">
		The <see cref="T:Ctc.Ods.Types.YearQuarter"/> we want the description for. This will be the first <see cref="T:Ctc.Ods.Types.CourseDescription"/> in the
		returned list. Any additional <see cref="T:Ctc.Ods.Types.CourseDescription"/>s in the list will be planned future updates.</param>
            <param name="descriptionCollections">
		The collections of <see cref="T:Ctc.Ods.Types.CourseDescription"/> objects to use in our logic. At this time, the business logic expects
		two (2) collections to be passed.
            </param>
            <returns>A list of <see cref="T:Ctc.Ods.Types.CourseDescription"/>s, with the currently active one at index 0, and in order of implementation.</returns>
            <exception cref="T:System.ApplicationException">
		The configured <see cref="P:Ctc.Ods.Customizations.Types.CourseDescriptionStrategy"/> was unable to be loaded.
            </exception>
        </member>
        <member name="P:Ctc.Ods.Data.OdsRepository._DbContext">
            <summary>
            Gets a reference to the <see cref="T:System.Data.Entity.DbContext"/> used by this object
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter">
            <summary>
            Gets the current <see cref="T:Ctc.Ods.Types.YearQuarter"/> for today's date
            </summary>
            <seealso cref="P:Ctc.Ods.Config.ApiSettings.YearQuarter"/>
        </member>
        <member name="P:Ctc.Ods.Data.OdsRepository.CurrentRegistrationQuarter">
            <summary>
            Gets the current registration <see cref="T:Ctc.Ods.Types.YearQuarter"/>for today's date
            </summary>
            <returns>The nearest <see cref="T:Ctc.Ods.Types.YearQuarter"/> that is currently open for registration.</returns>
            <seealso cref="M:Ctc.Ods.Data.OdsRepository.GetRegistrationQuarters(System.Int32)"/>
            <seealso cref="P:Ctc.Ods.Config.ApiSettings.YearQuarter"/>
        </member>
        <member name="T:Ctc.Ods.Data.OdsRepository.SectionFilters">
            <summary>
            Encapsulates a collection of <see cref="T:Ctc.Ods.Data.SectionEntity"/> LINQ query expressions
            </summary>
            <remarks>
            This object is intended to be used within and by the members of <see cref="T:Ctc.Ods.Data.OdsRepository"/> class.
            </remarks>
            <seealso cref="T:Ctc.Ods.Data.OdsRepository"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.SectionFilters.#ctor(Ctc.Ods.Data.OdsRepository)">
            <summary>
            Creates a new collection of <see cref="T:Ctc.Ods.Data.SectionEntity"/> query expressions
            </summary>
            <param name="repository">Provides access to the current <see cref="T:Ctc.Ods.Data.OdsRepository"/> instance.</param>
            <remarks>
            This constructor automtically adds various default expression filters that apply to all Section records retrieved.
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Data.OdsRepository.SectionFilters.Add(System.Collections.Generic.IEnumerable{Ctc.Ods.ISectionFacet})">
            <summary>
            Adds a collection of <see cref="T:Ctc.Ods.ISectionFacet"/> objects' expressions
            </summary>
            <param name="facets"></param>
        </member>
        <member name="P:Ctc.Ods.Data.OdsRepository.SectionFilters.FilterArray">
            <summary>
            Gets the collection of expression filters as an array
            </summary>
            <remarks>
            This value can then be passed to other methods which take a parameter array of expressions.
		<example>
			<code>
            SectionFilters filters = new SectionFilters();

            filters.Add(s =&gt; s.YearQuarterID.CompareTo("B014") &gt; 0);
            filters.Add(s =&gt; !String.IsNullOrWhitespace(s.DayID));

            var sections = _context.Sections.CompoundWhere(filters.FilterArray);
			</code>
		</example>
            </remarks>
            <seealso cref="M:Ctc.Ods.LinqExtensions.CompoundWhere``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])"/>
        </member>
        <member name="T:Ctc.Ods.Types.CoursePrefix">
            <summary>
            Defines a subject of study to which <see cref="T:Ctc.Ods.Types.Course"/>s belong
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.ICoursePrefix">
            <summary>
            Defines a subject of study to which <see cref="T:Ctc.Ods.Types.Course"/>s belong
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICoursePrefix.Subject">
            <summary>
            The five-character abbreviation which identifies a course of study (e.g. ENGL)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.ICoursePrefix.Title"/>
        </member>
        <member name="P:Ctc.Ods.Types.ICoursePrefix.Title">
            <summary>
            The full name of a course of study (e.g. English)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.ICoursePrefix.Subject"/>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.Equals(Ctc.Ods.Types.CoursePrefix)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.Equals(Ctc.Ods.Types.ICoursePrefix)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.op_Equality(Ctc.Ods.Types.CoursePrefix,Ctc.Ods.Types.CoursePrefix)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.CoursePrefix.op_Inequality(Ctc.Ods.Types.CoursePrefix,Ctc.Ods.Types.CoursePrefix)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.Types.CoursePrefix.Patterns">
            <summary>
            Provides a reference to configuration settings
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.CoursePrefix._Subject">
            <summary>

            </summary>
            <seealso cref="P:Ctc.Ods.Types.CoursePrefix.Subject"/>
        </member>
        <member name="P:Ctc.Ods.Types.CoursePrefix.Subject">
            <summary>
            The five-character abbreviation which identifies a course of study (e.g. ENGL)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.CoursePrefix.Title"/>
        </member>
        <member name="P:Ctc.Ods.Types.CoursePrefix.Title">
            <summary>
            The full name of a course of study (e.g. English)
            </summary>
            <seealso cref="P:Ctc.Ods.Types.CoursePrefix.Subject"/>
        </member>
        <member name="T:Ctc.Ods.TimeFacet">
            <summary>
            Defines a <see cref="T:Ctc.Ods.Types.Section"/> filter by start and end times
            </summary>
        </member>
        <member name="M:Ctc.Ods.TimeFacet.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:Ctc.Ods.Types.Section"/> filter by specifying a start and end time range
            </summary>
            <param name="startTimeRange">Exclude <see cref="T:Ctc.Ods.Types.Section"/>s which start before this time of day.</param>
            <param name="endTimeRange"></param>
        </member>
        <member name="M:Ctc.Ods.TimeFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Filters the <see cref="T:Ctc.Ods.Data.SectionEntity"/> query to only include records between the specified start and end times
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="T:Ctc.Ods.LinqExtensions">
            <summary>
            Extension methods for LINQ
            </summary>
        </member>
        <member name="M:Ctc.Ods.LinqExtensions.CompoundWhere``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            Applies multiple anonymous <i>.Where()</i> calls as a single query
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="whereClause"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.LinqExtensions.ToConcatenatedString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)">
            <summary>

            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="selector"></param>
            <param name="separator"></param>
            <returns></returns>
            <remarks>
            <para>
            This code is copied from <a href="https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/">https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/</a>
            </para>
            <para>
            Copyright (c) 2010 Pete Montgomery.
            http://petemontgomery.wordpress.com
            <br/>
            Licenced under GNU LGPL v3.
            http://www.gnu.org/licenses/lgpl.html
            </para>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.LinqExtensions.ToLinkedList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>

            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
            <remarks>
            <para>
            This code is copied from <a href="https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/">https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/</a>
            </para>
            <para>
            Copyright (c) 2010 Pete Montgomery.
            http://petemontgomery.wordpress.com
            <br/>
            Licenced under GNU LGPL v3.
            http://www.gnu.org/licenses/lgpl.html
            </para>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Data.EmployeeEntity">
            <summary>
            Represents the vw_Employee view in ODS
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.SID">
            <summary>
            The employee's unique ID
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.ADUserName">
            <summary>
            The employee's network username
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.AliasName">
            <summary>
            Name to use in place of <see cref="P:Ctc.Ods.Data.EmployeeEntity.FirstName"/>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.FirstName">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.LastName">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.EmployeeEntity.WorkEmail">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.AvailabilityFacet">
            <summary>
             Defines which <see cref="T:Ctc.Ods.Types.Section"/>s to include based on availability
            </summary>
             <remarks>
             An "available" <see cref="T:Ctc.Ods.Types.Section"/> is currently defined as:
             <list type="bullet">
			<item>
				<description>
				<b>Normal Section:</b> <i>ClassCapacity</i> - <i>StudentsEnrolled</i>
				</description>
			</item>
			<item>
				<description>
				<b>Clustered Section:</b> max(<i>ClusterCapacity</i>) - sum(<i>StudentsEnrolled</i>)
				</description>
			</item>
			<item>
				<description>
				<b>And</b> Does not have a <see cref="P:Ctc.Ods.Data.OdsContext.WaitListCounts">Waitlist</see>
				</description>
			</item>
             </list>

             NOTE: If these rules do not match the logic needed by your school, create a custom "availability" <see cref="T:Ctc.Ods.ISectionFacet">Facet</see> to use instead.

             </remarks>
        </member>
        <member name="M:Ctc.Ods.AvailabilityFacet.#ctor(Ctc.Ods.AvailabilityFacet.Options)">
            <summary>
             Creates a new Facet with the <see cref="T:Ctc.Ods.AvailabilityFacet.Options"/> specified
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Ctc.Ods.AvailabilityFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Gets filter to only include <see cref="T:Ctc.Ods.Types.Section"/>s which are "available"
            </summary>
            <param name="dbContext"></param>
            <remarks>
            An "available" <see cref="T:Ctc.Ods.Types.Section"/> is currently defined as:
            <list type="bullet">
		<item>
			<description>
			<b>Normal Section:</b> <i>ClassCapacity</i> - <i>StudentsEnrolled</i>
			</description>
		</item>
		<item>
			<description>
			<b>Clustered Section:</b> max(<i>ClusterCapacity</i>) - sum(<i>StudentsEnrolled</i>)
			</description>
		</item>
		<item>
			<description>
			<b>And</b> Does not have a <see cref="P:Ctc.Ods.Data.OdsContext.WaitListCounts">Waitlist</see>
			</description>
		</item>
            </list>

            NOTE: If these rules do not match the logic needed by your school, create a custom "availability" <see cref="T:Ctc.Ods.ISectionFacet">Facet</see> to use instead.

            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="dbContext"/>Is null, or is not a valid <see cref="T:Ctc.Ods.Data.OdsContext"/></exception>
        </member>
        <member name="T:Ctc.Ods.AvailabilityFacet.Options">
            <summary>
            </summary>
        </member>
        <member name="F:Ctc.Ods.AvailabilityFacet.Options.All">
            <summary>
             All Sections
            </summary>
        </member>
        <member name="F:Ctc.Ods.AvailabilityFacet.Options.Open">
            <summary>
             Sections that have available seats
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.SectionID">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.ISectionID">
            <summary>
            Identifies a specific instance of an <see cref="T:Ctc.Ods.Types.ICourse"/>
            </summary>
            <remarks>
            The specifications for an <see cref="T:Ctc.Ods.Types.ISectionID"/> (AKA "ClassID") are defined
            by the system(s) maintained by the SBCTC. As of the time of this writing (2011),
            a SectionID is currently composed of a 4-digit <see cref="P:Ctc.Ods.Types.ISectionID.ItemNumber"/> followed by
            a 4-character <see cref="P:Ctc.Ods.Types.ISectionID.YearQuarter"/> ID.
            </remarks>
            <seealso cref="P:Ctc.Ods.Types.ISectionID.ItemNumber"/>
            <seealso cref="P:Ctc.Ods.Types.ISectionID.YearQuarter"/>
        </member>
        <member name="M:Ctc.Ods.Types.ISectionID.Equals(System.String)">
            <summary>

            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.Types.ISectionID.ItemNumber">
            <summary>
            A 4-digit number assigned by the <i>Student Management System (SMS)</i>
            </summary>
            <remarks>
            This number in combination with a <see cref="P:Ctc.Ods.Types.ISectionID.YearQuarter"/> should be a unique
            value which represents a specific class.
            </remarks>
            <seealso cref="T:Ctc.Ods.Types.ISectionID"/>
        </member>
        <member name="P:Ctc.Ods.Types.ISectionID.YearQuarter">
            <summary>
            A 4-character <i>Year-Quarter (YRQ)</i>
            </summary>
            <seealso cref="T:Ctc.Ods.Types.ISectionID"/>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Ctc.Ods.Types.SectionID"/> from an item # and YRQ
            </summary>
            <param name="itemNumber"></param>
            <param name="yrq"></param>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.FromString(System.String)">
            <summary>
            Converts a string representation of a Section ID to an <see cref="T:Ctc.Ods.Types.ISectionID"/>
            </summary>
            <param name="sectionId"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.Equals(System.String)">
            <summary>

            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.Equals(Ctc.Ods.Types.ISectionID)">
            <summary>

            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.Equals(Ctc.Ods.Types.SectionID)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.op_Equality(Ctc.Ods.Types.SectionID,Ctc.Ods.Types.SectionID)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.SectionID.op_Inequality(Ctc.Ods.Types.SectionID,Ctc.Ods.Types.SectionID)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.Types.SectionID.ItemNumber">
            <summary>
            A 4-digit number assigned by the <i>Student Management System (SMS)</i>
            </summary>
            <remarks>
            This number in combination with a <see cref="P:Ctc.Ods.Types.ISectionID.YearQuarter"/> should be a unique
            value which represents a specific class.
            </remarks>
            <seealso cref="T:Ctc.Ods.Types.ISectionID"/>
        </member>
        <member name="P:Ctc.Ods.Types.SectionID.YearQuarter">
            <summary>
            A 4-character <i>Year-Quarter (YRQ)</i>
            </summary>
            <seealso cref="T:Ctc.Ods.Types.ISectionID"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
            This method is called when the model for a derived context has been initialized, but
                        before the model has been locked down and used to initialize the context.  The default
                        implementation of this method does nothing, but it can be overridden in a derived class
                        such that the model can be further configured before it is locked down.
            </summary>
            <remarks>
            Typically, this method is called only once when the first instance of a derived context
                        is created.  The model for that context is then cached and is for all further instances of
                        the context in the app domain.  This caching can be disabled by setting the ModelCaching
                        property on the given ModelBuidler, but note that this can seriously degrade performance.
                        More control over caching is provided through use of the DbModelBuilder and DbContextFactory
                        classes directly.
            </remarks>
            <param name="modelBuilder">The builder that defines the model for the context being created.</param>
        </member>
        <member name="M:Ctc.Ods.Data.OdsContext.DefineCourseDescriptionMappings(System.Data.Entity.DbModelBuilder)">
            <summary>
            Define database views and keys for the CourseDescription objects
            </summary>
            <param name="modelBuilder"></param>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription1Entity"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription2Entity"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase"/>
        </member>
        <member name="M:Ctc.Ods.Data.OdsContext.DefineCourseMappings(System.Data.Entity.DbModelBuilder)">
            <summary>
            Define entity mappings for the <see cref="T:Ctc.Ods.Types.Course"/> class
            </summary>
            <param name="modelBuilder">The builder that defines the model for the context being created.</param>
        </member>
        <member name="M:Ctc.Ods.Data.OdsContext.DefineFootnoteMappings(System.Data.Entity.DbModelBuilder)">
            <summary>
            Define entity mappings for the <see cref="P:Ctc.Ods.Data.OdsContext.Footnote"/> class
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:Ctc.Ods.Data.OdsContext.Days">
            <summary>

            </summary>
            <remarks>NOTE: This data is cached via <see cref="T:Ctc.Ods.Extensions.QueryResultCacheExtension"/></remarks>
        </member>
        <member name="P:Ctc.Ods.Data.OdsContext.YearQuarters">
            <summary>

            </summary>
            <remarks>NOTE: This data is cached via <see cref="T:Ctc.Ods.Extensions.QueryResultCacheExtension"/></remarks>
        </member>
        <member name="T:Ctc.Ods.Types.ICourseID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourseID.Subject">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourseID.Number">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Extensions.QueryResultCacheExtension">
            <summary>
            </summary>
            <remarks>
            <para>
            This code is adapted from <a href="https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/">https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/</a>
            </para>
            <para>
            Copyright (c) 2010 Pete Montgomery.
            http://petemontgomery.wordpress.com
            <br/>
            Licenced under GNU LGPL v3.
            http://www.gnu.org/licenses/lgpl.html
            </para>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Extensions.QueryResultCacheExtension.FromCache``1(System.Linq.IQueryable{``0})">
            <summary>
            Returns the result of the query; if possible from the cache, otherwise
            the query is materialized and the result cached before being returned.
            The cache entry has a one minute sliding expiration with normal priority.
            </summary>
        </member>
        <member name="M:Ctc.Ods.Extensions.QueryResultCacheExtension.FromCache``1(System.Linq.IQueryable{``0},System.Web.Caching.CacheItemPriority,System.TimeSpan)">
            <summary>
            Returns the result of the query; if possible from the cache, otherwise
            the query is materialized and the result cached before being returned.
            </summary>
        </member>
        <member name="M:Ctc.Ods.Extensions.QueryResultCacheExtension.GetCacheKey(System.Linq.IQueryable)">
            <summary>
            Gets a cache key for a query.
            </summary>
        </member>
        <member name="T:Ctc.Ods.Extensions.Evaluator">
            <summary>
            Enables the partial evaluation of queries.
            </summary>
            <remarks>
            From http://msdn.microsoft.com/en-us/library/bb546158.aspx
            Copyright notice http://msdn.microsoft.com/en-gb/cc300389.aspx#O
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ctc.Ods.Extensions.Evaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "M:Ctc.Ods.Extensions.Evaluator.PartialEval(System.Linq.Expressions.Expression)" -->
        <!-- Badly formed XML comment ignored for member "T:Ctc.Ods.Extensions.Evaluator.SubtreeEvaluator" -->
        <member name="T:Ctc.Ods.Extensions.Evaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Ctc.Ods.Extensions.LocalCollectionExpander">
            <summary>
            Enables cache key support for local collection values.
            </summary>
        </member>
        <member name="T:Ctc.Ods.Extensions.LocalCollectionExpander.Printer`1">
            <summary>
            Overrides ToString to print each element of a collection.
            </summary>
            <remarks>
            Inherits List in order to support List.Contains instance method as well
            as standard Enumerable.Contains/Any extension methods.
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Types.YearQuarter">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.#ctor(System.String)">
            <summary>

            </summary>
            <param name="yearQuarterId"></param>
            <seealso cref="M:Ctc.Ods.Types.YearQuarter.FromString(System.String)"/>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="yearQuarterId"/> is not a 4-character value.</exception>
            <exception cref="T:System.NullReferenceException"><paramref name="yearQuarterId"/> in <i>null</i>.</exception>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.#ctor">
            <summary>
            Empty constructor required by LINQ to Entity Framework
            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.Add">
            <summary>
            Adds one quarter to the current <see cref="T:Ctc.Ods.Types.YearQuarter"/> value
            </summary>
            <returns>The next <see cref="T:Ctc.Ods.Types.YearQuarter"/> in the academic year.</returns>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.FromString(System.String)">
            <summary>
            Creates a new <see cref="T:Ctc.Ods.Types.YearQuarter"/> object from a string value
            </summary>
            <param name="yearQuarterId">The 4-character code that represents this YearQuarterID</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="yearQuarterId"/> is not a 4-character value.</exception>
            <exception cref="T:System.NullReferenceException"><paramref name="yearQuarterId"/> in <i>null</i>.</exception>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.FromFriendlyName(System.String)">
            <summary>
            </summary>
            <param name="quarter"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.ToYearQuarterID(System.String)">
             <summary>

             </summary>
             <param name="quarter">YearQuarter in a "friendly" format (e.g. "Fall2011", "Fall 2011")</param>
             <returns>An YearQuarterID value (e.g. "B122")</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.ToFriendlyName(System.String)">
            <summary>
            Gets the user-friendly name for the quarter (e.g. "Fall 2010")
            </summary>
            <param name="yrq">A 4-character YRQ code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="yrq"/> is not a 4-character value.</exception>
            <exception cref="T:System.InvalidCastException"><paramref name="yrq"/> is not a valid YearQuarterID.</exception>
            <exception cref="T:System.NullReferenceException"><paramref name="yrq"/> in <i>null</i>.</exception>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.Equals(Ctc.Ods.Types.YearQuarter)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.op_Equality(Ctc.Ods.Types.YearQuarter,Ctc.Ods.Types.YearQuarter)">
            <summary>

            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.op_Inequality(Ctc.Ods.Types.YearQuarter,Ctc.Ods.Types.YearQuarter)">
            <summary>

            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.GetYear(System.Char,System.Char)">
            <summary>

            </summary>
            <param name="year"></param>
            <param name="modifer"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.IsValid(System.String)">
            <summary>

            </summary>
            <param name="yrq"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.IncrementYear(System.String,System.Char[]@)">
            <summary>
            Increments the year value of a YearQuarter <see cref="P:Ctc.Ods.Types.YearQuarter.ID"/>
            </summary>
            <param name="oldYrq"></param>
            <param name="newYrq"></param>
        </member>
        <member name="M:Ctc.Ods.Types.YearQuarter.GetYearMod(System.UInt16,System.UInt16)">
            <summary>

            </summary>
            <param name="century"></param>
            <param name="decade"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.Types.YearQuarter.ID">
            <summary>
            The 4-character code that represents this YearQuarterID
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.YearQuarter.FriendlyName">
            <summary>
            The user-friendly name for the quarter (e.g. "Fall 2010")
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.ISection">
            <summary>
            Defines an instance of a college class (<see cref="T:Ctc.Ods.Types.Course"/>)
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.ID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.CourseSubject">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.CourseNumber">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.CourseDescriptions">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.Yrq">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.StartDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.EndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.CourseID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.CourseTitle">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.Credits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.SectionCode">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.Footnotes">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.WaitlistCount">
            <summary>
            Number of students on the waitlist
            </summary>
            <remarks>
            A non-zero value is also an indication that the <see cref="T:Ctc.Ods.Types.Section"/> is <i>closed</i>.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsOnline">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsCommonCourse">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsContinuousEnrollment">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsVariableCredits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsLateStart">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.Offered">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsOnCampus">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsTelecourse">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsHybrid">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsLinked">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.LinkedTo">
            <summary>
            An <see cref="P:Ctc.Ods.Types.SectionID.ItemNumber"/> identifying another <see cref="T:Ctc.Ods.Types.Section"/> that this <see cref="T:Ctc.Ods.Types.Section"/> is linked to
            </summary>
            <remarks>
            <para>Only classes in the same <see cref="T:Ctc.Ods.Types.YearQuarter"/> can be linked.</para>
            <para>If the current <see cref="T:Ctc.Ods.Types.Section"/> is not linked to another, then its own <see cref="P:Ctc.Ods.Types.SectionID.ItemNumber"/> may appear here.</para>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.IsDifferentEndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ISection.LastRegistrationDate">
            <summary>
            The latest date to register for the <see cref="T:Ctc.Ods.Types.Section"/>
            </summary>
            <remarks>
		<note type="note">
			<para>
			Per SBCTC policy, this value defaults to the "the last instructional day of the course" (e.g. <see cref="P:Ctc.Ods.Types.ISection.EndDate"/>)
			</para>
			- <a href="http://www.sbctc.ctc.edu/general/policymanual/_a-policymanual-ch5Append.aspx">http://www.sbctc.ctc.edu/general/policymanual/_a-policymanual-ch5Append.aspx</a>
		</note>
            </remarks>
            <seealso cref="P:Ctc.Ods.Types.ISection.IsContinuousEnrollment"/>
            <seealso cref="P:Ctc.Ods.Types.ISection.StartDate"/>
            <seealso cref="P:Ctc.Ods.Types.ISection.EndDate"/>
        </member>
        <member name="T:Ctc.Ods.Data.CourseDescription1Entity">
            <summary>
            Represents the vw_CourseDescription view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase"/>
        </member>
        <member name="T:Ctc.Ods.Data.CourseDescriptionEntityBase">
            <summary>
            Base implementation of the <see cref="T:Ctc.Ods.Data.CourseDescription1Entity"/> and <see cref="T:Ctc.Ods.Data.CourseDescription2Entity"/> classes
            </summary>
            <remarks>
            This class exists because <see cref="T:Ctc.Ods.Data.CourseDescription1Entity"/> and <see cref="T:Ctc.Ods.Data.CourseDescription2Entity"/> are
            identical, and this way we can maintain them both at a single point.
            </remarks>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription1Entity"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription2Entity"/>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.Settings">
            <summary>
            Provides access to the configuration settings for the ODS API.
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.CourseDescriptionID">
            <summary>
            The unique ID for the CourseDescription record
            </summary>
            <remarks>
            WARNING: This value is guaranteed to be unique for each record in the database,
            but IS NOT guaranteed to remain constant for each record - DO NOT rely on this
            value to reference any given record.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.CourseID">
            <summary>
            The unique ID for the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.Description">
            <summary>
            The long description for the course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.ColCode">
            <summary>
            College Code ID
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.CourseDescriptionEntityBase.YearQuarterBegin">
            <summary>
            YearQuarter this description takes/took effect
            </summary>
            <remarks>
            NOTE: if this value is null or an empty string it is replaced with <see cref="!:ApiSettings.YearQuarter.Min"/>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Data.CourseDescription2Entity">
            <summary>
            Represents the vw_CourseDescription2 view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase"/>
        </member>
        <member name="T:Ctc.Ods.Data.DayEntity">
            <summary>
            Represents the vw_Day view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.OdsContext"/>
        </member>
        <member name="P:Ctc.Ods.Data.DayEntity.DayID">
            <summary>
            Primary key to the vw_Day view
            </summary>
            <remarks>
            A 2-character varchar
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.DayEntity.Title">
            <summary>
            Represents the days of the week
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.OfferedItem">
            <summary>
            Defines when and where a <see cref="T:Ctc.Ods.Types.Section"/> is offered
            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.OfferedItem.#ctor">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.ID">
            <summary>
            Unique key needed by LINQ in order to perform queries
            </summary>
            <remarks>
            This value is a random <see cref="T:System.Guid"/> and should only be used to
            uniquely identify each <see cref="T:Ctc.Ods.Types.OfferedItem"/> object.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.Days">
            <summary>
            The day(s) a <see cref="T:Ctc.Ods.Types.Section"/> meets (e.g. "TTh")
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.StartTime">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.EndTime">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.InstructorID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.InstructorName">
            <summary>
            The name of the instructor the current <see cref="T:Ctc.Ods.Types.OfferedItem"/>
            </summary>
            <remarks>
            If no instructor name is present in the database, this value will be <see cref="F:System.String.Empty"/>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.InstructorEmail">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.Room">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.IsPrimary">
            <summary>
            Indicates whether this is the primary instructor and/or meeting time
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.OfferedItem.SequenceOrder">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.RegistrationQuartersFacet">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.RegistrationQuartersFacet.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.RegistrationQuartersFacet.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="quarterCount"></param>
            <exception cref="T:System.InvalidOperationException"><paramref name="quarterCount"/> cannot be zero (0).</exception>
        </member>
        <member name="M:Ctc.Ods.RegistrationQuartersFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dbContext"/>Is null, or is not a valid <see cref="T:Ctc.Ods.Data.OdsContext"/> object.</exception>
        </member>
        <member name="P:Ctc.Ods.RegistrationQuartersFacet.Settings">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.LateStartFacet">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.LateStartFacet.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.LateStartFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="T:Ctc.Ods.Config.ApiSettings">
            <summary>
            Encapsulates a custom configuration block in the application's .config
            </summary>
            <remarks>
            <para>
		<see cref="T:Ctc.Ods.Config.ApiSettings"/> provides access to a custom configuration node which allows the consuming
		application to define configuration settings appropriate to their environment.
            </para>
            <para>
		To use this class; the following must be configured in the .config file for the executing context:
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<regex CommonCourseChar="&amp;"/>
					<yearQuarter minValue="0000" maxValue="Z999" registrationLeadDays="14" cache="30"/>
					<waitlist status="W-LISTED"/>
					<classFlags online="3" hybrid="8" telecourse="1">
						<rule action="exclude" column="SectionStatusID1" position="contains" value="X"/>
						<rule action="exclude" column="SectionStatusID1" position="contains" value="Z"/>
						<rule action="exclude" column="SectionStatusID2" position="contains" value="A"/>
						<rule action="exclude" column="SectionStatusID4" position="contains" value="M"/>
						<rule action="exclude" column="SectionStatusID4" position="contains" value="N"/>
					</classFlags>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </para>
            <para>
		And; then loaded with the following line of code:
		<code lang="c#">
			ApiSettings settings = (ApiSettings)ConfigurationManager.GetSection(ApiSettings.SectionName);
		</code>
            </para>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.SectionName">
            <summary>
            Gets the name of the XML configuration node for this class
            </summary>
            <exception cref="T:System.InvalidOperationException">
		Unable to identify the XML <see cref="P:System.Xml.Serialization.XmlTypeAttribute.TypeName"/> for this class.
            </exception>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.ClassFlags">
            <summary>
            Encapsulates a collection of one or more <see cref="T:Ctc.Ods.Config.ClassRule"/>s
            </summary>
            <seealso cref="P:Ctc.Ods.Config.ApiSettings.ClassFlags"/>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.YearQuarter">
            <summary>
             Provides <see cref="T:Ctc.Ods.Config.ApiSettings"/> related to <see cref="P:Ctc.Ods.Config.ApiSettings.YearQuarter"/> values
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.Waitlist">
            <summary>
            Provides <see cref="T:Ctc.Ods.Config.ApiSettings"/> related to whether or not a <see cref="T:Ctc.Ods.Types.Section"/> has a <i>waitlist</i>
            </summary>
            <remarks>
            Once a <see cref="T:Ctc.Ods.Types.Section"/> has reached its maximum student enrollment for the quarter any additional
            students registering will be placed on the waitlist instead.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.RegexPatterns">
            <summary>
            Contains regular expression <see cref="T:Ctc.Ods.Config.ApiSettings"/>
            </summary>
            <seealso cref="T:Ctc.Ods.Config.RegexSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.ApiSettings.SectionDaysDefault">
            <summary>
            Provides rules for displaying a <see cref="T:Ctc.Ods.Types.Section"/>'s <i>Days</i> information
            </summary>
            <remarks>
		<para>When no class days are specified for a section, this element
		defines the default value that will be listed on the class schedule (ex: "Arranged").</para>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<sectionDaysDefault valueToReplace="ARRANGED" newValue="Arranged"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Config.YearQuarterNode">
            <summary>
             Provides <see cref="T:Ctc.Ods.Config.ApiSettings"/> related to <see cref="T:Ctc.Ods.Types.YearQuarter"/> values
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.YearQuarterNode.Min">
            <summary>
             The lowest allowed <see cref="P:Ctc.Ods.Types.YearQuarter.ID"/> value
            </summary>
             <remarks>
			<para>This is not expected to represent a usable <see cref="T:Ctc.Ods.Types.YearQuarter"/> value, but rather
			the smallest value that is programmatically recognized.</para>
			<code lang="xml">
				<configuration>

					<configSections>
						<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
					</configSections>

					<ctcOdsApiSettings>
						<yearQuarter minValue="0000"/>
					</ctcOdsApiSettings>

				</configuration>
			</code>
             </remarks>
             <seealso cref="T:Ctc.Ods.Config.YearQuarterNode">&gt;yearQuarter&lt;</seealso>
             <seealso cref="P:Ctc.Ods.Config.YearQuarterNode.Max">&gt;maxValue&lt;</seealso>
        </member>
        <member name="P:Ctc.Ods.Config.YearQuarterNode.Max">
            <summary>
             The largest allowed <see cref="P:Ctc.Ods.Types.YearQuarter.ID"/> value
            </summary>
             <remarks>
			<para>This is not expected to represent a usable <see cref="T:Ctc.Ods.Types.YearQuarter"/> value, but rather
			the largest value that is programmatically recognized.</para>
			<code lang="xml">
				<configuration>

					<configSections>
						<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
					</configSections>

					<ctcOdsApiSettings>
						<yearQuarter maxValue="Z999"/>
					</ctcOdsApiSettings>

				</configuration>
			</code>
             </remarks>
             <seealso cref="T:Ctc.Ods.Config.YearQuarterNode">&gt;yearQuarter&lt;</seealso>
             <seealso cref="P:Ctc.Ods.Config.YearQuarterNode.Min">&gt;minValue&lt;</seealso>
        </member>
        <member name="P:Ctc.Ods.Config.YearQuarterNode.RegistrationLeadDays">
            <summary>
            Days in advance of registration to start showing quarter information
            </summary>
            <remarks>
		<para>
		The setting below indicates the "current registration quarter" should begin 14 days before
		the opening of registration. This allows users to access data before registration actually
		opens.
		</para>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<yearQuarter registrationLeadDays="14"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="T:Ctc.Ods.Config.YearQuarterNode">&gt;yearQuarter&lt;</seealso>
        </member>
        <member name="P:Ctc.Ods.Config.YearQuarterNode.Cache">
            <summary>
            How long to cache <see cref="T:Ctc.Ods.Types.YearQuarter"/> data, in minutes
            </summary>
            <remarks>
		<para>
		Data from both the <i>YearQuarter</i> and <i>WebRegistrationSetting</i> table will be cached
		for this many minutes.
		</para>
		<note type="important">This caching only applies to queries for <i>only</i> data from these tables.
		It is not cached when this data is joined with other data.
		</note>
		<para>The following configuration example will cache YRQ information for one (1) hour:</para>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<yearQuarter cache="60"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="T:Ctc.Ods.Config.YearQuarterNode">&gt;yearQuarter&lt;</seealso>
        </member>
        <member name="T:Ctc.Ods.Config.ClassFlags">
            <summary>
            Encapsulates a collection of one or more <see cref="T:Ctc.Ods.Config.ClassRule"/>s
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<classFlags online="3">
						<rule action="exclude" column="SectionStatusID1" position="contains" value="X"/>
					</classFlags>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.Rules">
            <summary>
            A list of <see cref="T:Ctc.Ods.Config.ClassRule"/>s, which define which class records to include/exclude
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.Online">
            <summary>
            Value in the <b>ODS</b> which identifies an Online <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
            <remarks>
            The code looks for this value in the <i>SBCTCMisc1</i> column of the <i>vw_Class</i> view.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.Hybrid">
            <summary>
            Value in the <b>ODS</b> which identifies a Hybrid <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
            <remarks>
            The code looks for this value in the <i>SBCTCMisc1</i> column of the <i>vw_Class</i> view.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.Telecourse">
            <summary>
            Value in the <b>ODS</b> which identifies a Telecourse <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
            <remarks>
            The code looks for this value in the <i>SBCTCMisc1</i> column of the <i>vw_Class</i> view.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.ContinuousEnrollment">
            <summary>
            Value in the <b>ODS</b> which identifies a Continuous Enrollment <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
            <remarks>
            The code looks for this value in the <i>ContinuousSequentialIndicator</i> column of the <i>vw_Class</i> view.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Config.ClassFlags.LateStartDaysCount">
            <summary>
            Value in the <b>ODS</b> which identifies a Continuous Enrollment <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
            <remarks>
            The code looks for this value in the <i>ContinuousSequentialIndicator</i> column of the <i>vw_Class</i> view.
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Config.ClassRule">
            <summary>
            Represents a filter rule for retrieving class data from ODS
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<classFlags>
						<rule action="exclude" column="SectionStatusID1" position="contains" value="X"/>
					</classFlags>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.ClassRule.Action">
            <summary>
            Defines whether to include or exclude class data that matches the associated rule
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassRuleAction"/>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.ClassRule.Column">
            <summary>
            The name of the column to query in the vw_Class table
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.ClassRule.Position">
            <summary>
            Where to look for the specified <see cref="P:Ctc.Ods.Config.ClassRule.Value"/> in the specified <see cref="P:Ctc.Ods.Config.ClassRule.Column"/>
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassRulePosition"/>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.ClassRule.Value">
            <summary>
            The value to look in the specified <see cref="P:Ctc.Ods.Config.ClassRule.Column"/> for
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="T:Ctc.Ods.Config.WaitlistNode">
            <summary>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.WaitlistNode.Status">
            <summary>
            </summary>
        </member>
        <member name="T:Ctc.Ods.Config.RegexSettings">
            <summary>
            Contains regular expression <see cref="T:Ctc.Ods.Config.ApiSettings"/>
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<regex CommonCourseChar="&amp;"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="P:Ctc.Ods.Config.RegexSettings.CommonCourseChar">
            <summary>
            The character which identifies a <see cref="T:Ctc.Ods.Types.Course"/> as being the same across schools
            </summary>
        </member>
        <member name="T:Ctc.Ods.Config.DefaultSectionDaysNode">
            <summary>
            Used to find a particular value that is used as a default in ODS, and replace it with
            a new value. Sections with no scheduled days might default to "ARRANGED," but in many
            situations you might want to replace this value with something more application specific
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.DefaultSectionDaysNode.ValueToFind">
            <summary>
            The old "default" in the ODS to find
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<sectionDaysDefault valueToReplace="ARRANGED" newValue="Arranged"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="P:Ctc.Ods.Config.DefaultSectionDaysNode.NewValue">&gt;newValue&lt;</seealso>
        </member>
        <member name="P:Ctc.Ods.Config.DefaultSectionDaysNode.NewValue">
            <summary>
            The new default value
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi"/>
				</configSections>

				<ctcOdsApiSettings>
					<sectionDaysDefault valueToReplace="ARRANGED" newValue="Arranged"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
            <seealso cref="P:Ctc.Ods.Config.DefaultSectionDaysNode.ValueToFind">&gt;valueToReplace&lt;</seealso>
        </member>
        <member name="T:Ctc.Ods.Config.LateStartDefinitionNode">
            <summary>
            Sets up the definition of a "late start" section.
            </summary>
        </member>
        <member name="P:Ctc.Ods.Config.LateStartDefinitionNode.LateStartDays">
            <summary>
            Defines how many days after the start of a quarter a class needs to start in order to be called a "Late Start" class.
            </summary>
            <remarks>
		<code lang="xml">
			<configuration>

				<configSections>
					<section name="ctcOdsApiSettings" type="Ctc.Ods.Config.SettingsConfigHandler, CtcOdsApi" />
				</configSections>

				<ctcOdsApiSettings>
					<lateStartDefinition daysCount="20"/>
				</ctcOdsApiSettings>

			</configuration>
		</code>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Config.ClassRuleAction">
            <summary>
            Defines whether to include or exclude class data that matches the associated rule
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassRule"/>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="F:Ctc.Ods.Config.ClassRuleAction.Include">
            <summary>
            Include class data that matches this rule
            </summary>
        </member>
        <member name="F:Ctc.Ods.Config.ClassRuleAction.Exclude">
            <summary>
            Exclude class data that matches this rule
            </summary>
        </member>
        <member name="T:Ctc.Ods.Config.ClassRulePosition">
            <summary>
            Where to look for the specified <see cref="P:Ctc.Ods.Config.ClassRule.Value"/> in the specified <see cref="P:Ctc.Ods.Config.ClassRule.Column"/>
            </summary>
            <seealso cref="T:Ctc.Ods.Config.ClassRule"/>
            <seealso cref="T:Ctc.Ods.Config.ClassFlags"/>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="F:Ctc.Ods.Config.ClassRulePosition.Contains">
            <summary>
            The <see cref="P:Ctc.Ods.Config.ClassRule.Value"/> can be anywhere in the specified <see cref="P:Ctc.Ods.Config.ClassRule.Column"/>
            </summary>
        </member>
        <member name="T:Ctc.Ods.Utility">
            <summary>
             Contains a collections of useful methods/properties/objects.
            </summary>
        </member>
        <member name="F:Ctc.Ods.Utility.DATE_OVERRIDE_KEY">
            <summary>
            If present in &gt;appSettings&lt; this value will override <see cref="P:Ctc.Ods.Utility.Today"/>
            </summary>
            <remarks>
            This &gt;appSettings&lt; key is currently <i>CurrentDateOverride</i>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.GetHpTime(System.TimeSpan)">
            <summary>
            Creates a <see cref="T:System.DateTime"/> object which conforms to HP fields - which only contain meaningful time information.
            </summary>
            <param name="timeSpan"></param>
            <returns>
            A <see cref="T:System.DateTime"/> value for 1/1/1900 (the default for an "empty" date in
            the HP3000) with the <paramref name="timeSpan">time</paramref> supplied.
            </returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.DigitToChar(System.UInt16)">
            <summary>
            Converts a single digit to a <see langref="char"/> value
            </summary>
            <param name="value">A single digit unsigned number</param>
            <returns>
		A <see langref="char"/> representation of the number provided.
		<note type="important">This is <b>NOT</b> the ASCII character.</note>
            </returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
		<para>
		This method was originally created to support <see cref="T:Ctc.Ods.Types.YearQuarter"/> calculations.
		</para>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.CircularDigitSum(System.UInt16,System.Int16)">
            <summary>
            Performs addition on a single-digit value, wrapping around the boundries
            </summary>
            <param name="value">A single digit unsigned number</param>
            <param name="adder">How much to add to <paramref name="value"/></param>
            <returns>
		If <paramref name="value"/> is at either end of the single digit range (0 or 9)
		<paramref name="adder"/> is applied to the opposite end, so that the incrementation
		wraps around the range. Otherwise the sum of <paramref name="value"/> and
		<paramref name="adder"/>
            </returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
		<note type="caution">
		At the moment, this method only supports an <paramref name="adder"/> value of
		1 or -1.
		</note>
		<para>
		This method was originally created to support <see cref="T:Ctc.Ods.Types.YearQuarter"/> calculations.
		</para>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.SafeConvertToBool(System.String)">
            <summary>
            Safely converts a <see langref="string"/> value to a <see langref="bool"/>
            </summary>
            <param name="value">The value to attempt to convert</param>
            <returns>
		<i>true</i> if <paramref name="value"/> is equivalent to <see cref="F:System.Boolean.TrueString"/>,
		otherwise <i>false</i>.
            </returns>
            <remarks>
            Unlike the standard <see cref="T:System.Boolean"/> conversion methods, <b>SafeConvertToBool</b>
            will silentsly return <i>false</i> if it encounters an error during the conversion attempt.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ctc.Ods.Utility.ParseCourseID(System.String,System.Boolean@,System.String@,System.String@,System.String)" -->
        <member name="M:Ctc.Ods.Utility.IsAlphaNumeric(System.String)">
            <summary>
            Identifies whether or not the supplied value contains letters and/or numbers
            </summary>
            <param name="strValue">The value to check.</param>
            <returns>
		<i>True</i> if <paramref name="strValue"/> contains alphanumeric characters,
		otherwise <i>false</i>.
            </returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.IsNumber(System.String)">
            <summary>
            Identifies whether the specified <see cref="T:System.String"/> can be converted to a number
            </summary>
            <param name="str"></param>
            <returns></returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.TitleCase(System.String)">
            <summary>
            Capitalizes the first letter of each word in a <see cref="T:System.String"/>
            </summary>
            <param name="str"></param>
            <returns></returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
		This method utilizes code taken from <a href="http://channel9.msdn.com/forums/TechOff/252814-Howto-Capitalize-first-char-of-words-in-a-string-NETC/">this
		forum post</a>.
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.GetApplicationVersion(System.Reflection.Assembly,System.String)">
            <summary>
            Retrieve a <paramref name="dll"/>'s <see cref="T:System.Version"/>, with formatting if supplied
            </summary>
            <param name="dll"></param>
            <param name="format">
		A simple <see langref="string"/> template. The following token placeholders are recognized:
		<list type="table">
			<listheader>
				<term>Token</term>
				<description>Replaced with</description>
			</listheader>
			<item>
				<term>{MAJOR}</term>
				<description><see cref="P:System.Version.Major"/></description>
			</item>
			<item>
				<term>{MINOR}</term>
				<description><see cref="P:System.Version.Minor"/></description>
			</item>
			<item>
				<term>{REVISION}</term>
				<description><see cref="P:System.Version.Revision"/></description>
			</item>
			<item>
				<term>{BUILD}</term>
				<description><see cref="P:System.Version.Build"/></description>
			</item>
		</list>
            </param>
            <returns>A string representation of the <paramref name="dll"/>'s <see cref="T:System.Version"/></returns>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            </remarks>
        </member>
        <member name="M:Ctc.Ods.Utility.ReplaceIfPresent(System.String@,System.String,System.Int32)">
            <summary>

            </summary>
            <param name="buffer"></param>
            <param name="token"></param>
            <param name="component"></param>
        </member>
        <member name="P:Ctc.Ods.Utility.AssemblyName">
            <summary>
            The canononical name of the currently executing <see cref="T:System.Reflection.Assembly"/>
            </summary>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Utility.Today">
            <summary>
            Replacement for <see cref="P:System.DateTime.Today"/> which can be overriden in the .config file
            </summary>
            <remarks>
		<note type="caution">THIS MEMBER DOES NOT YET HAVE UNIT TESTS</note>
            Use this property in place of <see cref="P:System.DateTime.Today"/> becuase it permits overriding the
            current date by setting the <see cref="F:Ctc.Ods.Utility.DATE_OVERRIDE_KEY"/> in the application's .config
            file. This can be very useful for testing and/or troubleshooting.
            </remarks>
            <value>Either the <see cref="T:System.DateTime">Date</see> provided by <see cref="F:Ctc.Ods.Utility.DATE_OVERRIDE_KEY"/> or <see cref="P:System.DateTime.Today"/></value>
        </member>
        <member name="T:Ctc.Ods.Types.ICourseDescription">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourseDescription.CourseID">
            <summary>
            Non-unique field that maps to CourseID in Course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourseDescription.Description">
            <summary>
            Long course description describing a course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.ICourseDescription.YearQuarterBegin">
            <summary>
            Effective Year/Quarter that the description applies to
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.Footnote">
            <summary>
             Contains additional information about the associated <see cref="T:Ctc.Ods.Types.ISection"/>
            </summary>
             <remarks>
             This is where information such as pre-requisites, fees, etc. can be found.
             </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.Footnote.FootnoteId">
            <summary>
            A unique record ID - required by Entity Framework
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Footnote.FootnoteText">
            <summary>
            The text of the footnote entry
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Footnote.ColCode">
            <summary>
            College Code ID
            </summary>
        </member>
        <member name="T:Ctc.Ods.Types.CourseDescription">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.CourseDescription.CourseID">
            <summary>
            Non-unique field that maps to CourseID in Course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.CourseDescription.Description">
            <summary>
            Long course description describing a course
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.CourseDescription.YearQuarterBegin">
            <summary>
            Effective Year/Quarter that the description applies to
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.CourseDescription._YearQuarterBegin">
            <summary>
            Provided for compatiblity with Entity Framework
            </summary>
            <remarks>
            Instantiating object properties from Entity Framework <i>selects</i> does not
            support parameter constructors or static methods, so we need to provide a
            property of a primitive data type to assign to.
            </remarks>
            <seealso cref="P:Ctc.Ods.Types.CourseDescription.YearQuarterBegin"/>
        </member>
        <member name="T:Ctc.Ods.Types.Section">
            <summary>
            Defines an instance of a college class (i.e. <see cref="T:Ctc.Ods.Types.Course"/>)
            </summary>
            <remarks>
            A <see cref="T:Ctc.Ods.Types.Section"/> provides a rich, heirarchical represenation of the data found in
            the <i>vw_Class</i> view of the ODS. This allows the .NET developer to work with a logical
            object rather than being limited by the schematic designs of the HP3000 data source.

            To obtain one or more <see cref="T:Ctc.Ods.Types.Section"/> objects use the <see cref="T:Ctc.Ods.Data.OdsRepository"/>
            </remarks>
            <seealso cref="T:Ctc.Ods.Data.OdsRepository"/>
        </member>
        <member name="M:Ctc.Ods.Types.Section.#ctor">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.Section.#ctor(System.String)">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.Types.Section.#ctor(Ctc.Ods.Types.ISectionID)">
            <summary>

            </summary>
            <param name="sectionId"></param>
        </member>
        <member name="M:Ctc.Ods.Types.Section.Equals(Ctc.Ods.Types.ISection)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.Types.Section.Equals(Ctc.Ods.Types.Section)">
            <summary>

            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Section.Equals(System.Object)">
            <summary>

            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Section.GetHashCode">
            <summary>

            </summary>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Section.op_Equality(Ctc.Ods.Types.Section,Ctc.Ods.Types.Section)">
            <summary>

            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Section.op_Inequality(Ctc.Ods.Types.Section,Ctc.Ods.Types.Section)">
            <summary>

            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.Types.Section.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Ctc.Ods.Types.Section.ID">
            <summary>
            Gets the unique identifier for the <see cref="T:Ctc.Ods.Types.Section"/>
            </summary>
            <seealso cref="T:Ctc.Ods.Types.ISectionID"/>
            <seealso cref="T:Ctc.Ods.Types.SectionID"/>
        </member>
        <member name="P:Ctc.Ods.Types.Section.CourseSubject">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.CourseNumber">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.CourseDescriptions">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.Yrq">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.StartDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.EndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsOnline">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsOnCampus">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsTelecourse">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsHybrid">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsContinuousEnrollment">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsVariableCredits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsLateStart">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsLinked">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.LinkedTo">
            <summary>
            An <see cref="P:Ctc.Ods.Types.SectionID.ItemNumber"/> identifying another <see cref="T:Ctc.Ods.Types.Section"/> that this <see cref="T:Ctc.Ods.Types.Section"/> is linked to
            </summary>
            <remarks>
            <para>Only classes in the same <see cref="T:Ctc.Ods.Types.YearQuarter"/> can be linked.</para>
            <para>If the current <see cref="T:Ctc.Ods.Types.Section"/> is not linked to another, then its own <see cref="P:Ctc.Ods.Types.SectionID.ItemNumber"/> may appear here.</para>
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsDifferentEndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._YearQuarterID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._CourseDescriptions1">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._CourseDescriptions2">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._Footnote1">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._Footnote2">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._SBCTCMisc1">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._ContinuousSequentialIndicator">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._LastRegistrationDate">
            <summary>
            Data retrieval stub for <see cref="P:Ctc.Ods.Types.Section.LastRegistrationDate"/>
            </summary>
            <seealso cref="P:Ctc.Ods.Types.Section.LastRegistrationDate"/>
        </member>
        <member name="P:Ctc.Ods.Types.Section._VariableCredits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._LateStart">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._DifferentEndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._CourseTitle">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section._CourseFootnotes">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.SectionCode">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.Footnotes">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.CourseID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.IsCommonCourse">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.CourseTitle">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.Credits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.Offered">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.WaitlistCount">
            <summary>
            Number of students on the waitlist
            </summary>
            <remarks>
            A non-zero value is also an indication that the <see cref="T:Ctc.Ods.Types.Section"/> is <i>closed</i>.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Types.Section.ClassID">
            <summary>
            Internal unique ID field - needed by Entity Framework
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.Patterns">
            <summary>
            Provides a reference to configuration settings
            </summary>
        </member>
        <member name="P:Ctc.Ods.Types.Section.LastRegistrationDate">
            <summary>
            The latest date to register for the <see cref="T:Ctc.Ods.Types.Section"/>
            </summary>
            <remarks>
		<note type="note">
			<para>
			Per SBCTC policy, this value defaults to the "the last instructional day of the course" (e.g. <see cref="P:Ctc.Ods.Types.Section.EndDate"/>)
			</para>
			- <a href="http://www.sbctc.ctc.edu/general/policymanual/_a-policymanual-ch5Append.aspx">http://www.sbctc.ctc.edu/general/policymanual/_a-policymanual-ch5Append.aspx</a>
		</note>
            </remarks>
            <seealso cref="P:Ctc.Ods.Types.Section.IsContinuousEnrollment"/>
            <seealso cref="P:Ctc.Ods.Types.Section.StartDate"/>
            <seealso cref="P:Ctc.Ods.Types.Section.EndDate"/>
        </member>
        <member name="M:Ctc.Ods.Config.SettingsConfigHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Loads <see cref="T:System.Configuration.ConfigurationSection"/> from .config file into a <see cref="T:Ctc.Ods.Config.ApiSettings"/> object
            </summary>
            <param name="parent">Parent object</param>
            <param name="configContext">Configuration context object</param>
            <param name="section">Settings XML node from the configuration file</param>
            <returns>A <see cref="T:Ctc.Ods.Config.ApiSettings"/> configuration object</returns>
            <remarks>
            This method is invoked from the .NET configuration system when parsing the .config file.
            </remarks>
            <seealso cref="T:Ctc.Ods.Config.ApiSettings"/>
        </member>
        <member name="M:Ctc.Ods.YearQuarterFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dbContext"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">A valid option value was not specified when the class was instantiated.</exception>
        </member>
        <member name="T:Ctc.Ods.CommonExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.CommonExtensions.UriCombine(System.String,System.String)">
            <summary>

            </summary>
            <param name="val"></param>
            <param name="append"></param>
            <remarks>
            Code taken from
            <a href="http://stackoverflow.com/questions/372865/path-combine-for-urls/4275109#4275109">http://stackoverflow.com/questions/372865/path-combine-for-urls/4275109#4275109</a>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.CommonExtensions.ToMd5Fingerprint(System.String)">
            <summary>
            Creates an MD5 fingerprint of the string.
            </summary>
            <remarks>
            <para>
            This code is copied from <a href="https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/">https://petemontgomery.wordpress.com/2008/08/07/caching-the-results-of-linq-queries/</a>
            </para>
            <para>
            Copyright (c) 2010 Pete Montgomery.
            http://petemontgomery.wordpress.com
            <br/>
            Licenced under GNU LGPL v3.
            http://www.gnu.org/licenses/lgpl.html
            </para>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.Data.YearQuarterEntity">
            <summary>
            Represents the vw_Class view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.OdsContext"/>
        </member>
        <member name="P:Ctc.Ods.Data.YearQuarterEntity.YearQuarterID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.YearQuarterEntity.FirstClassDay">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.YearQuarterEntity.LastClassDay">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.WebRegistrationSettingEntity">
            <summary>
            Represents the vw_WebRegistrationSetting view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.OdsContext"/>
        </member>
        <member name="P:Ctc.Ods.Data.WebRegistrationSettingEntity.YearQuarterID">
            <summary>
            The 4-digit year/quarter ID (e.g. B014)
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.WebRegistrationSettingEntity.FirstRegistrationDate">
            <summary>
            Date registration is open for the associated <see cref="P:Ctc.Ods.Data.WebRegistrationSettingEntity.YearQuarterID"/>
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.WebRegistrationSettingEntity.LastRegistrationDate">
            <summary>
            Date registration closes for the associated <see cref="P:Ctc.Ods.Data.WebRegistrationSettingEntity.YearQuarterID"/>
            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.WaitlistEntity">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.WaitlistEntity.ClassID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.WaitlistEntity.SID">
            <summary>
            Student ID
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.WaitlistEntity.Status">
            <summary>
            The status of the waitlist record
            </summary>
            <seealso cref="!:ApiSettings.Waitlist.Status"/>
        </member>
        <member name="T:Ctc.Ods.Data.InstructorEntity">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.InstructorEntity.SID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.InstructorEntity.WorkEmail">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Customizations.Types.CourseDescriptionStrategy">
            <summary>
            Retrieves the "CourseDescriptionHandler" from the application's configuration file
            </summary>
            <remarks>
            This should be the fully-qualified class name, including namespaces
            <example>
		Ctc.Ods.Customizations.BellevueCollegeCourseDescriptionStrategy
            </example>
            </remarks>
        </member>
        <member name="T:Ctc.Ods.CourseID">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.CourseID.#ctor(System.String,System.String)">
            <summary>

            </summary>
            <param name="subject"></param>
            <param name="number"></param>
        </member>
        <member name="M:Ctc.Ods.CourseID.FromString(System.String)">
            <summary>

            </summary>
            <param name="courseId"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.CourseID.FromString(System.String,System.String)">
            <summary>

            </summary>
            <param name="subject"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.CourseID.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.CourseID.Equals(Ctc.Ods.Types.ICourseID)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.CourseID.Equals(Ctc.Ods.CourseID)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.CourseID.Equals(System.String)">
            <summary>
            Indicates whether the current object is equal to a <see cref="T:System.String"/> representing the same value.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">A string to compare with this object.</param>
        </member>
        <member name="M:Ctc.Ods.CourseID.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.CourseID.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Ctc.Ods.CourseID.op_Equality(Ctc.Ods.CourseID,Ctc.Ods.CourseID)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Ctc.Ods.CourseID.op_Inequality(Ctc.Ods.CourseID,Ctc.Ods.CourseID)">
            <summary>
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Ctc.Ods.CourseID.Subject">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.CourseID.Number">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.SectionEntity">
            <summary>
            Represents the vw_Class view in ODS
            </summary>
            <seealso cref="T:Ctc.Ods.Data.OdsContext"/>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ClassID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.Section">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.YearQuarterID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ItemNumber">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ItemYRQLink">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ClusterItemNumber">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ClassCapacity">
            <summary>
             How many students the <see cref="P:Ctc.Ods.Data.SectionEntity.Section"/> can accomodate
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ClusterCapacity">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.StudentsEnrolled">
            <summary>
             Number of students currently enrolled.
             TODO: verify StudentsEnrolled has accurate data
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.CourseID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.CourseTitle">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.Credits">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.InstructorSID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.InstructorName">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.DayID">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.StartDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.EndDate">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.StartTime">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.EndTime">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.Room">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.LastRegistrationDate">
            <summary>
            The latest date to register for the <see cref="P:Ctc.Ods.Data.SectionEntity.Section"/>, if different from the reqular schedule
            </summary>
            <seealso cref="P:Ctc.Ods.Data.SectionEntity.ContinuousSequentialIndicator"/>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.SBCTCMisc1">
            <summary>
            Contains flags which indicate which type of <see cref="P:Ctc.Ods.Data.SectionEntity.Section"/> this is
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.ContinuousSequentialIndicator">
            <summary>
            Contains flags to indicate the <see cref="P:Ctc.Ods.Data.SectionEntity.Section"/>'s enrollment type
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.VariableCredits">
            <summary>
            Contains flags to indicate the <see cref="P:Ctc.Ods.Data.SectionEntity.Section"/>'s credit type
            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.SectionStatusID1">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.SectionStatusID2">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.SectionStatusID4">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.FootnoteID1">
            <summary>

            </summary>
        </member>
        <member name="P:Ctc.Ods.Data.SectionEntity.FootnoteID2">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.CreditsFacet">
            <summary>
            </summary>
        </member>
        <member name="M:Ctc.Ods.CreditsFacet.#ctor(System.Int32)">
            <summary>

            </summary>
            <param name="credits">Number of credits to filter for</param>
        </member>
        <member name="M:Ctc.Ods.CreditsFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="T:Ctc.Ods.Customizations.BellevueCollegeCourseDescriptionStrategy">
            <summary>
            Implements Bellevue College's business logic for determining a <see cref="T:Ctc.Ods.Types.Course"/>'s description(s)
            </summary>
        </member>
        <member name="M:Ctc.Ods.Customizations.BellevueCollegeCourseDescriptionStrategy.#ctor(System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescription1Entity},System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescription2Entity})">
            <summary>
            Encapsulates Bellevue College's business logic for retrieving course descriptions
            </summary>
            <param name="descriptionsEntity">A collection of <see cref="T:Ctc.Ods.Types.Course"/> descriptions from the first table in the ODS.</param>
            <param name="dummyEntity">THIS VALUE IS IGNORED.  (Bellevue College does not use the second description table in the ODS.)</param>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription1Entity"/>
        </member>
        <member name="M:Ctc.Ods.Customizations.BellevueCollegeCourseDescriptionStrategy.GetDescriptions(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter)">
            <summary>
            Retrieves current and future course descriptions from the database
            </summary>
            <param name="courseId">The course ID to retrieve the description for.</param>
            <param name="yrq">
		The <see cref="T:Ctc.Ods.Types.YearQuarter"/> to retrieve the description for. If not supplied, will default to the
		<see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>.
            </param>
            <returns>
            A collection of <see cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase">course description entites</see>:
            <list type="table">
		<item>
			<term>First record</term>
			<description>
				The course description for the specified <paramref name="yrq"/> (or <see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>
				if not supplied.
			</description>
		</item>
		<item>
			<term>Successive records</term>
			<description>
				Future course description updates, in the order they will be updated (by YearQuarter).
			</description>
		</item>
            </list>
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="yrq"/> is null.</exception>
        </member>
        <member name="T:Ctc.Ods.Customizations.DefaultCourseDescriptionStrategy">
            <summary>
            NOT IMPLEMENTED - Default business logic for determining a <see cref="T:Ctc.Ods.Types.Course"/>'s description(s)
            </summary>
        </member>
        <member name="M:Ctc.Ods.Customizations.DefaultCourseDescriptionStrategy.#ctor(System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescriptionEntityBase},System.Collections.Generic.IEnumerable{Ctc.Ods.Data.CourseDescriptionEntityBase})">
            <summary>
            NOT IMPLEMENTED - Encapsulates default business logic for retrieving <see cref="T:Ctc.Ods.Types.Course"/> descriptions
            </summary>
            <param name="descriptions1Entities">A collection of <see cref="T:Ctc.Ods.Types.Course"/> descriptions from the first table in the ODS.</param>
            <param name="descriptions2Entities">A collection of <see cref="T:Ctc.Ods.Types.Course"/> descriptions from the second table in the ODS.</param>
            <exception cref="T:System.NotImplementedException"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription1Entity"/>
            <seealso cref="T:Ctc.Ods.Data.CourseDescription2Entity"/>
        </member>
        <member name="M:Ctc.Ods.Customizations.DefaultCourseDescriptionStrategy.GetDescriptions(Ctc.Ods.Types.ICourseID,Ctc.Ods.Types.YearQuarter)">
            <summary>
            Retrieves current and future course descriptions from the database
            </summary>
            <param name="courseId">The course ID to retrieve the description for.</param>
            <param name="yrq">
		The <see cref="T:Ctc.Ods.Types.YearQuarter"/> to retrieve the description for. If not supplied, will default to the
		<see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>.
            </param>
            <remarks>
            This class provides a default fallback in situations where the instantiation of a custom <see cref="T:Ctc.Ods.Customizations.ICourseDescriptionStrategy"/> fails.
            </remarks>
            <returns>
            A collection of <see cref="T:Ctc.Ods.Data.CourseDescriptionEntityBase">course description entites</see>:
            <list type="table">
		<item>
			<term>First record</term>
			<description>
				The course description for the specified <paramref name="yrq"/> (or <see cref="P:Ctc.Ods.Data.OdsRepository.CurrentYearQuarter"/>
				if not supplied.
			</description>
		</item>
		<item>
			<term>Successive records</term>
			<description>
				Future course description updates, in the order they will be updated (by YearQuarter).
			</description>
		</item>
            </list>
            </returns>
            <exception cref="T:System.NotImplementedException"/>
        </member>
        <member name="T:Ctc.Ods.ModalityFacet">
            <summary>

            </summary>
        </member>
        <member name="M:Ctc.Ods.ModalityFacet.GetFilter``1(System.Data.Entity.DbContext)">
            <summary>
            Provides the appropriate anonymous method for a LINQ .Where() call, depending on the option specified
            </summary>
            <param name="dbContext"></param>
            <remarks>
            This property assumes the database field is 2 characters long.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A valid <see cref="T:Ctc.Ods.ModalityFacet.Options"/> value was not specified when the class was instantiated.</exception>
            <seealso cref="T:Ctc.Ods.ModalityFacet.Options"/>
        </member>
        <member name="M:Ctc.Ods.ModalityFacet.#ctor(Ctc.Ods.ModalityFacet.Options)">
            <summary>

            </summary>
            <param name="option"></param>
        </member>
        <member name="T:Ctc.Ods.ModalityFacet.Options">
            <summary>
            Options for which <see cref="T:Ctc.Ods.Types.Section"/>s to include
            </summary>
        </member>
        <member name="F:Ctc.Ods.ModalityFacet.Options.All">
            <summary>
            Include all <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
        </member>
        <member name="F:Ctc.Ods.ModalityFacet.Options.Online">
            <summary>
            Include only online <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
        </member>
        <member name="F:Ctc.Ods.ModalityFacet.Options.Hybrid">
            <summary>
            Include only hybrid (both <see cref="F:Ctc.Ods.ModalityFacet.Options.Online"/> and <see cref="F:Ctc.Ods.ModalityFacet.Options.OnCampus"/>) <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
        </member>
        <member name="F:Ctc.Ods.ModalityFacet.Options.Telecourse">
            <summary>
            Include only telecom <see cref="T:Ctc.Ods.Types.Section"/>s
            </summary>
        </member>
        <member name="F:Ctc.Ods.ModalityFacet.Options.OnCampus">
            <summary>
            Include only <see cref="T:Ctc.Ods.Types.Section"/>s that meet on campus (in a classroom)
            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.InstructionEntity">
            <summary>

            </summary>
        </member>
        <member name="T:Ctc.Ods.Data.CoursePrefixEntity">
            <summary>
             Internal entity object for use in database access
            </summary>
             <remarks>
             DO NOT USE THIS CLASS IN YOUR CODE.  Use <see cref="T:Ctc.Ods.Types.ICoursePrefix"/> objects.
             </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CoursePrefixEntity.CoursePrefixID">
            <summary>
            The five-character abbreviation which identifies a course of study (e.g. ENGL)
            </summary>
            <remarks>
            PrefixID values that end in <see cref="!:ApiSettings.RegexPatterns.CommonCourseChar"/>
            only exist in the database to provide a relational lookup for <see cref="T:Ctc.Ods.Types.Course"/>s to
            which the Common Course designation applies. Since the API handles these relationships
            for us, and leaving this designator active creates duplicate subjects, it is filtered
            out of any list of CoursePrefixes.
            </remarks>
        </member>
        <member name="P:Ctc.Ods.Data.CoursePrefixEntity.Title">
            <summary>
            The full name of a course of study (e.g. English)
            </summary>
        </member>
    </members>
</doc>
