//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace CTCClassSchedule.Models
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ClassScheduleFootnoteEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new ClassScheduleFootnoteEntities object using the connection string found in the 'ClassScheduleFootnoteEntities' section of the application configuration file.
        /// </summary>
        public ClassScheduleFootnoteEntities() : base("name=ClassScheduleFootnoteEntities", "ClassScheduleFootnoteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ClassScheduleFootnoteEntities object.
        /// </summary>
        public ClassScheduleFootnoteEntities(string connectionString) : base(connectionString, "ClassScheduleFootnoteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new ClassScheduleFootnoteEntities object.
        /// </summary>
        public ClassScheduleFootnoteEntities(EntityConnection connection) : base(connection, "ClassScheduleFootnoteEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseFootnote> CourseFootnote
        {
            get
            {
                if ((_CourseFootnote == null))
                {
                    _CourseFootnote = base.CreateObjectSet<CourseFootnote>("CourseFootnote");
                }
                return _CourseFootnote;
            }
        }
        private ObjectSet<CourseFootnote> _CourseFootnote;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SectionFootnote> SectionFootnote
        {
            get
            {
                if ((_SectionFootnote == null))
                {
                    _SectionFootnote = base.CreateObjectSet<SectionFootnote>("SectionFootnote");
                }
                return _SectionFootnote;
            }
        }
        private ObjectSet<SectionFootnote> _SectionFootnote;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the CourseFootnote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseFootnote(CourseFootnote courseFootnote)
        {
            base.AddObject("CourseFootnote", courseFootnote);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SectionFootnote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSectionFootnote(SectionFootnote sectionFootnote)
        {
            base.AddObject("SectionFootnote", sectionFootnote);
        }

        #endregion
    }


    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassScheduleFootnoteModel", Name="CourseFootnote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseFootnote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CourseFootnote object.
        /// </summary>
        /// <param name="courseID">Initial value of the CourseID property.</param>
        public static CourseFootnote CreateCourseFootnote(global::System.String courseID)
        {
            CourseFootnote courseFootnote = new CourseFootnote();
            courseFootnote.CourseID = courseID;
            return courseFootnote;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.String _CourseID;
        partial void OnCourseIDChanging(global::System.String value);
        partial void OnCourseIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Footnote
        {
            get
            {
                return _Footnote;
            }
            set
            {
                OnFootnoteChanging(value);
                ReportPropertyChanging("Footnote");
                _Footnote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Footnote");
                OnFootnoteChanged();
            }
        }
        private global::System.String _Footnote;
        partial void OnFootnoteChanging(global::System.String value);
        partial void OnFootnoteChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassScheduleFootnoteModel", Name="SectionFootnote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SectionFootnote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new SectionFootnote object.
        /// </summary>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static SectionFootnote CreateSectionFootnote(global::System.String classID)
        {
            SectionFootnote sectionFootnote = new SectionFootnote();
            sectionFootnote.ClassID = classID;
            return sectionFootnote;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.String _ClassID;
        partial void OnClassIDChanging(global::System.String value);
        partial void OnClassIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Footnote
        {
            get
            {
                return _Footnote;
            }
            set
            {
                OnFootnoteChanging(value);
                ReportPropertyChanging("Footnote");
                _Footnote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Footnote");
                OnFootnoteChanged();
            }
        }
        private global::System.String _Footnote;
        partial void OnFootnoteChanging(global::System.String value);
        partial void OnFootnoteChanged();

        #endregion

    }

    #endregion

}
