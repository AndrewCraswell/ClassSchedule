@model CTCClassSchedule.Models.AToZViewModel
@{
	// construct the route values we'll pass to the ActionLink helper
	IDictionary<string, object> routeParms = ViewBag.LinkParams;
	string Action = ViewContext.RouteData.Values["Action"].ToString();

  routeParms.Remove("letter");
}
<p id="a_to_z">
  @if (Model.ViewingLetter == null)
  {
    @Html.ActionLink("View All", Action, new RouteValueDictionary(routeParms), new { @class = "selected" })
  }
  else
  {
    @Html.ActionLink("View All", Action, new RouteValueDictionary(routeParms))
  }


  @{
    routeParms.Add("letter", string.Empty);
  }
  @foreach (char letter in Model.LettersList)
  {
    routeParms["letter"] = letter.ToString();
    if(letter.Equals(Model.ViewingLetter))
    {
		  @Html.ActionLink(letter.ToString(), Action, new RouteValueDictionary(routeParms), new { @class = "selected" })
    }
    else
    {
      @Html.ActionLink(letter.ToString(), Action, new RouteValueDictionary(routeParms))
    }
  }

  @{
    routeParms.Remove("letter");
  }
</p>
