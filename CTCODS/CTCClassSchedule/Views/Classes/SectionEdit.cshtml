@using CTCClassSchedule
@model CTCClassSchedule.Models.SectionEditModel

<div id="SectionEdit">
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

		if (Model != null && Model.SectionToEdit != null)
		{
		  SectionWithSeats section = Model.SectionToEdit;
    <fieldset>
        <legend>@(section.CourseSubject) @(section.CourseNumber) #@(section.ID.ItemNumber) - @(section.Yrq.FriendlyName)</legend>

				@Html.Hidden("CourseSubject", section.CourseSubject)
				@Html.Hidden("CourseNumber", section.CourseNumber)
				@Html.Hidden("ItemNumber", section.ID.ItemNumber)
				@Html.Hidden("YRQ", section.Yrq.ID)
				@Html.Hidden("Username", "test.user")
        @Html.Hidden("referrer", (Request.UrlReferrer != null ? Request.UrlReferrer.ToString() : string.Empty))

      <div id="accordion">
					<h3><a href="#">Notes</a></h3>
					<div id="first">
						<div class="editor-label">
								@Html.LabelFor(model => section.Footnotes, "Default Notes:")
						</div>
						<div class="editor-field">
							@foreach (string footnote in section.Footnotes) {
								<text>@footnote</text>
							}
						</div>

						<div class="editor-label">
								@Html.LabelFor(model => section.SectionFootnotes, "Additional Notes:")
						</div>
						<div class="editor-field">
								@Html.TextAreaFor(model => section.SectionFootnotes, new { @class = "editSectionFootnotes", @cols = 80, @rows = 14 })
								@Html.ValidationMessageFor(model => section.SectionFootnotes)
						</div>
					</div>

					<h3><a href="#">Advanced Options</a></h3>
        <div id="second">
          <div class="editor-label">
            @Html.LabelFor(model => section.CustomTitle, "Custom Title (makes section show as a different class)")
          </div>
          <div class="editor-field">

            @Html.TextBoxFor(model => section.CustomTitle, new { @class = "SubjectTextfield", @maxlength = "100" })
            @Html.ValidationMessageFor(model => section.CustomTitle)
          </div>

          <div class="editor-label">
            @Html.LabelFor(model => section.CustomDescription, "Custom Description (only visibile when there is a custom title)")
          </div>
          <div class="editor-field">
            @Html.TextAreaFor(model => section.CustomDescription, new { @class = "editSectionFootnotes", @cols = 80, @rows = 14 })
            @Html.ValidationMessageFor(model => section.CustomDescription)
          </div>
        </div>

        <h3><a href="javascript:void(0)">Cross-listings</a></h3>
        <div id="third">
          <div class="editor-label">
            Courses which are cross-listed with this section
          </div>
          <div class="editor-field">
            <ul id="cross-listed-courses" class="cross-list-merger">
              @{
                if (section.IsCrossListed && Model.CrossListedCourses != null)
                {
                  foreach (string courseID in Model.CrossListedCourses)
                  {
                    <li class="cross-listed-course-choice">
                      <span>@courseID</span>
                      <input name="CrossListedCourses" value="@courseID" type="hidden" />
                      <span class="cross-listed-course-choice-close ui-icon ui-icon-close"></span>
                    </li>
                  }
                }
              }
            </ul>
          </div>
          <div class="editor-label">
            Add a cross-listed CourseID
          </div>
          <div class="editor-field">
            <ul class="cross-list-merger">
              <li class="cross-list-course-new">
                @* TODO: Add client-side validation to new course IDs being entered. *@
                <input type="text" id="newCrossListCourseID" /><input type="button" id="addCourseID" value="&lt;&lt; Add"/>
              </li>
            </ul>
          </div>
        </div>
      </div>

				<div id="lastModifiedBy">
				@if (section.LastUpdated != "")
    {
					<text>Last modified by @(section.LastUpdatedBy) on</text> @(section.LastUpdated)
    }

				</div>
				<p class="clear"></p>
        <p>
            <input type="submit" value="Save" /> <a href="#" id="cancelEdit">Cancel</a>
        </p>
    </fieldset>

    }
    else
    {
		  <p class="input-validation-error">
		    <strong>Invalid Section:</strong> Did not receive any Section information.
		  </p>
		}
}
</div>

<script src="@Url.Content("~/Content/js/jquery-1.6.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Content/js/jquery-ui-1.8.17.custom.min.js")"></script>

<script type="text/javascript">

  $(document).ready(function () {
    $("#accordion").accordion();

    $("#cancelEdit").click(function (e) {
      e.preventDefault();
      $(".ui-dialog").hide();
      showThrobber();
      window.location.href = $(location).attr('href');
    });

    $(".ui-dialog").keydown(function (e) {
      if (e.keyCode == 27) { // esc
        $(".ui-dialog").hide();
        showThrobber();
        window.location.href = $(location).attr('href');
      }
    });

    // Delete cross-listed course choices
    $('#cross-listed-courses .cross-listed-course-choice-close').click(function () {
      var courseToRemove = $(this).parent(); // Remove the subject from the list of selected
      $(courseToRemove).remove();
    });

    // Add a cross-listed course
    $('#addCourseID').click(function () {
      console.log('Clicked Add button');

      var txtBox = $('#newCrossListCourseID');
      var enteredCourseID = txtBox.val();
      console.log('Value = ' + enteredCourseID);

      if (enteredCourseID.length > 0) {
        var optionToAdd = '<li class="cross-listed-course-choice"><span>' + enteredCourseID + '</span><input name="CrossListedCourses" value="' + enteredCourseID + '" type="hidden"><span class="cross-listed-course-choice-close ui-icon ui-icon-close"></span></li>';
        console.log('Adding ' + optionToAdd);

        $('#cross-listed-courses').append(optionToAdd);

        console.log("Clearing textbox.");
        txtBox.val('');
      } else {
        // TODO: validate CourseID entered
        // TODO: highlight empty field
        alert("Please enter a CourseID");
      }
    });
  });
</script>
