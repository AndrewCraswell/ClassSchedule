@using CTCClassSchedule
@using CTCClassSchedule.Common
@using CTCClassSchedule.Controllers
@using MvcMiniProfiler;
@using Ctc.Ods.Types
@model IList<CTCClassSchedule.SectionWithSeats>
@{
	MiniProfiler _profiler = MiniProfiler.Current;

	IDictionary<string, object> _routeValues = ViewBag.RouteValues;
	_routeValues["YearQuarterID"] = "All";
	_routeValues["Subject"] = Model.Count > 0 ? Model.First().CourseSubject.Trim() : null;
	RouteValueDictionary route = new RouteValueDictionary(_routeValues);


	string courseID = string.Empty;
	string sectionID = string.Empty;
	decimal credits = 0;
	bool isVariableCredit = false;
	string PreviousCourseID = courseID;
	string PreviousSectionID = sectionID;
	decimal PreviousCredits = credits;
	bool PreviousIsVariableCredit = isVariableCredit;

	string FriendlyYRQ = string.Empty;
	string thisYrq = string.Empty;

	IList<SectionWithSeats> orderedModel = Model.OrderBy(s => s.CourseNumber).ThenByDescending(s => s.IsVariableCredits).ThenBy(s => s.Credits).ToList();
	IList<YearQuarter> yrqList = (ViewBag.QuarterNavMenu as IList<YearQuarter>);
	string currentYrq = yrqList[0].ID;

	if (ViewBag.YearQuarter != null)
	{
		YearQuarter yrq = ViewBag.YearQuarter;
		thisYrq = yrq.ID;
		FriendlyYRQ = yrq.FriendlyName;
	}

	ViewBag.PageTitle = FriendlyYRQ + " " + ViewBag.ProgramTitle + " Credit Class Schedule at Bellevue College";

}
<script type="text/javascript" src="@Url.Content("~/Scripts/CtcClassSchedule.js")"></script>
<div id="scheduleMain">
	@{
		Html.RenderPartial("quarterNavigation");
	}
	<div id="container" class="sidebar">
		<div id="sidebar">
			@{
				Html.RenderPartial("advancedFacetedSearch");
				Html.RenderPartial("basicFacetedSearch");
			}
		</div>
		<!-- #sidebar -->
		<div id="content">



			@if (Model.Count == 0)
	 {
				<h1>
					No classes found.</h1>
	 }
	 else
	 {
				<h1 id="pageTitle">
					@ViewBag.ProgramTitle
					<span class="subjectchooser">@Html.Partial("subjectNavigation")</span>
				</h1>

		 if (!string.IsNullOrWhiteSpace(ViewBag.ProgramUrl))
		 {
				<p id="programWebsite">
					<a href="@ViewBag.ProgramUrl" class="programWebsite">Program Website</a>
				</p>
		 }

			if (Ctc.Web.Security.ActiveDirectoryRoleProvider.IsUserInRoles(Context.User, "Developers") == true)
		{
				<div class="message">@Context.User.Identity.Name! You have admin access to this section.</div>
		}

		using (_profiler.Step("Rendering Sections by Course (outer loop)"))
		{
			foreach (SectionWithSeats sec in orderedModel)
			{
				courseID = sec.CourseID;
				sectionID = sec.ID.ToString();
				credits = sec.Credits;
				isVariableCredit = sec.IsVariableCredits;

				if (!sec.IsLinked)
				{
					if (courseID != PreviousCourseID || (courseID == PreviousCourseID && credits != PreviousCredits) || (courseID == PreviousCourseID && isVariableCredit != PreviousIsVariableCredit))
					{
						if (PreviousCourseID != "")
						{
				@:</ul>
					}

						route["Subject"] = sec.CourseSubject.Trim();
						route["ClassNum"] = sec.CourseNumber;

				<text>
				<div class="classinfo">

				@if (Context.User.Identity.Name.Length > 0)
		{
					@Ajax.ActionLink("Edit",
											"ClassEdit",
											"Api",
											new
											{
												CourseNumber = sec.CourseNumber.ToString(),
												Subject = sec.CourseSubject.ToString(),
												IsCommonCourse = sec.IsCommonCourse,
											},
											new AjaxOptions
											{
												UpdateTargetId = "edit-class",
												HttpMethod = "GET",
												InsertionMode = InsertionMode.Replace,
												OnBegin = "$('#edit-class').dialog('open');",
												OnComplete = "spinner.stop();",
											},
											new { @class = "edit_button" })

		}
				<h2 class="classHeading">
					<a href="@Url.Action("ClassDetails", "Classes", route)">
						@Html.Raw(string.Format("{0}{1} {2} {3}", sec.CourseSubject, sec.IsCommonCourse ? "&" : string.Empty, sec.CourseNumber, sec.CourseTitle))
					</a>

				@{
		IEnumerable<SectionWithSeats> linkedSections = orderedModel.Where(s => s.IsLinked && s.Yrq.ID == sec.Yrq.ID && s.LinkedTo.Trim() == sec.ID.ItemNumber);
		bool hasLinked = linkedSections.Count() > 0;
				}
				@foreach (SectionWithSeats linkedSec in linkedSections)
		{
			<br/>
			<a href="@Url.Action("ClassDetails", "Classes", new { YearQuarterID = "All", Subject = linkedSec.CourseSubject.Trim(), ClassNum = linkedSec.CourseNumber })">
				@Html.Raw(string.Format("{0}{1} {2} {3}", linkedSec.CourseSubject, linkedSec.IsCommonCourse ? "&" : string.Empty, linkedSec.CourseNumber, linkedSec.CourseTitle))
			</a>
		}
		&#8226;
			@if (isVariableCredit)
	 {
				    <span class="classCredits">
					    V1-@Html.CreditsValue(sec.Credits)
				        <abbr title=" variable credit(s) ">Cr.</abbr>
            </span>
	 }
	 else
	 {
				    <span class="classCredits">
					    @Html.CreditsValue(sec.Credits)
				        <abbr title=" credit(s) ">Cr.</abbr>
            </span>
	 }
				</h2>
				<div class="CourseFootnotes">
					@sec.CourseFootnotes
					@if (sec.CourseFootnotes.IndexOf("prerequisite", StringComparison.OrdinalIgnoreCase) >= 0)
		 {
						<a class="footnote-prereq" href="http://bellevuecollege.edu/enrollment/transfer/prerequisites/">How to clear prerequisites?</a>
		 }
				</div>
				<p class="classDetails">
				@if (hasLinked)
		{
					@Html.ActionLink("View class details", "ClassDetails", "Classes", route, null)
		}
				</p>
				<ul class='course-block@(currentYrq != thisYrq ? Html.Raw(" course-block-past-quarter") : Html.Raw(string.Empty))'>

				</div>
				</text>
					 }

					 if (PreviousSectionID != sectionID)
					 {
						 Html.RenderPartial("Sections", sec, new ViewDataDictionary { { "PreviousSectionID", PreviousSectionID } });
					 }
				 }

				 PreviousCredits = sec.Credits;
				 PreviousSectionID = sectionID;
				 PreviousCourseID = courseID;
				 PreviousIsVariableCredit = isVariableCredit;
			 }
		 }
	 }


<script type="text/javascript">
	/* subject chooser pop-up dialog */
	$(document).ready(function () {

		$("#edit-section").dialog({
			autoOpen: false,
			height: 375,
			width: 560,
		});

		$("#edit-class").dialog({
			autoOpen: false,
			height: 375,
			width: 560,
		});

			$('li.section-listing').hover(
				function () {
					$(this).children('ul.section-details').children('li.editing').children('a.edit_button').show();
					$(this).addClass('yellow-dashed');
				},
				function () {
					$(this).children('ul.section-details').children('li.editing').children('a.edit_button').hide();
					$(this).removeClass('yellow-dashed');
			});

			$('.classinfo').hover(
				function () {
					$(this).children('a.edit_button').show();
					$(this).addClass('yellow-dashed');
				},
				function () {
					$(this).children('a.edit_button').hide();
					$(this).removeClass('yellow-dashed');
			});

	});
</script>

	<div title="Edit Section" id="edit-section"></div>
	<div title="Edit Class" id="edit-class"></div>

		</div>
		<!-- content -->
	</div>
	<!-- container -->
</div>
<!-- #scheduleMain -->
