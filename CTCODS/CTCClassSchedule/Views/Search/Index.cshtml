@model CTCClassSchedule.SearchResultsModel
@using CTCClassSchedule.Common;
@using System.Text.RegularExpressions;

@{
	String quarter = ViewBag.quarter;
	String classDesc = ViewBag.SubjectCount == 1 ? "class" : "classes";
	String sectionDesc = ViewBag.ItemCount == 1 ? "section" : "sections";
	String description = "";
}


<script type="text/javascript">

	$(document).ready(function () {

		//highlight all of the words that match the search term, respecting case.
		var lowercase = "@(ViewBag.searchterm)".toLowerCase();
		var uppercase = "@(ViewBag.searchterm)".toUpperCase();
		var capitalized = "@(ViewBag.searchterm)".charAt(0).toUpperCase() + "@(ViewBag.searchterm)".substr(1);

		$("*").each(function () {
			if ($(this).children().length == 0) {
				$(this).html($(this).html().replace(lowercase, '<em class="keyword">' + lowercase + '</em>'));
				$(this).html($(this).html().replace(capitalized, '<em class="keyword">' + capitalized + '</em>'));
				$(this).html($(this).html().replace(uppercase, '<em class="keyword">' + uppercase + '</em>'));
			}
		});

		//end of highlight

		//call the getSeats method when any of the [update] links are clicked.
		$('.course-updated a').click(function () {

			var courseIdPlusYRQ = this.id;
			var availability = '.availability-' + courseIdPlusYRQ + ' .seatsAvailable';
			var courseUpdated = '.availability-' + courseIdPlusYRQ + ' .course-updated em';
			var originalSeatsAvailable = $(availability).html();


			//load the throbber
			$(availability).html('<img src="/Content/images/ajax-loader.gif" title="loading_seats_available" alt="loading_seats_available" />');

			//post the ajax call to get the available seats and update the UI
			$.ajax({
				url: '/Classes/getseats',
				type: 'POST',
				data: { courseIdPlusYRQ: courseIdPlusYRQ },
				timeout: 4000,
				success: function (result) {
					var indexOfPipe = result.indexOf("|");
					var seatsAvailable = result.substring(0, indexOfPipe);
					var friendlyTime = "updated " + result.substring(indexOfPipe + 1, result.length);

					$(availability).html(seatsAvailable);
					$(courseUpdated).html(friendlyTime);
				},
				error: function (x, t, m) {
					//alert("got timeout");
					$(availability).html(originalSeatsAvailable);
					$(courseUpdated).html("server busy, try again");
				}

			});
		});
	});

</script>
<div id="scheduleMain">
	@Html.Partial("quarterNavigation")
	@Html.Partial("advancedFacetedSearch")
	<div id="scheduleContent">

	<div id="searchHeaderInfo">
		<h1 id="searchResultsMsg">
			<strong>"@(ViewBag.searchterm)"</strong> found @ViewBag.ItemCount @sectionDesc in @ViewBag.SubjectCount @classDesc
		</h1>
		<div id="searchPageNum">
			page @ViewBag.CurrentPage of @ViewBag.TotalPages
		</div>
	</div>

	@foreach (var item in Model.Section)
	{
		int count = 0;
		if(@ViewBag.displayedCourseNum != item.CourseNumber)
		{
			if (count == 0)
			{
				@Html.Raw("</ul>")
				count++;
			}
			<h2 class="classHeading">
				@Html.ActionLink(item.CourseSubject + " " + item.CourseNumber + " " + item.CourseTitle + " • " + item.Credits + " Cr.", "ClassDetails", "Classes", new { YearQuarterID = quarter, Subject = item.CourseSubject, ClassNum = item.CourseNumber }, null)
			</h2>





			<p id="courseDescription">
				@*Html.Raw(item.CourseDescriptions[0].Description.Replace(ViewBag.searchterm, "<em class='keyword'>" + ViewBag.searchterm + "</em>"))) *@
				@item.CourseDescriptions[0].Description
                @Html.ActionLink("View Class Details", "ClassDetails",  "Classes", new { YearQuarterID = quarter, Subject = item.CourseSubject, ClassNum = item.CourseNumber }, null)
			</p>

			@Html.Raw("<ul class='course-block'>");
		}




			<li class="section-listing"><span class="item-number"><span class="descriptor">Item
				number: </span>@((item.ID).ToString().Substring(0, 4))</span>
				<ul class="section-details">

					<!--start of repeat offered information -->
					@foreach (Ctc.Ods.Types.OfferedItem offering in item.Offered)
					{
						<li class="section"><span class="descriptor">Section: </span>@item.SectionCode</li>
						<li class="instructor"><span class="descriptor">Instructor:</span>
							<ul>
								<li>
										@if (string.IsNullOrWhiteSpace(@offering.InstructorEmail))
					{
						if (string.IsNullOrWhiteSpace(@offering.InstructorName))
						{ <text>TBD</text> }
						else
						{ @offering.InstructorName	}
					}
					else
					{
						if (string.IsNullOrWhiteSpace(@offering.InstructorName))
						{ <text>TBD</text> }
						else
						{ <a href="@Helpers.getProfileURL(Convert.ToString(offering.InstructorID))">@offering.InstructorName</a>	}
					}
								</li>
							</ul>
						</li>

						<li><span class="descriptor">Meets: </span>
							<ul class="meets">
								<li><span class="days">
									<abbr title="Mondays and Wednesdays">
										@if (item.IsOnline == true)
										{
											<text>Online</text>
										}
										else {
											@offering.Days
										}


									</abbr></span> <span class="times">
										<span class="descriptor">at </span>@String.Format("{0:t}", offering.StartTime).Replace(" ", "")-@String.Format("{0:t}", offering.EndTime).Replace(" ", "")
									</span><span class="room"><span class="descriptor">in </span>@offering.Room</span>
								</li>
							</ul>
						</li>


																																	if (ViewBag.seatAvailbilityDisplayed == false)
																																	{
							<li class="availability-@(item.ID.ToString())">
								<span class="descriptor">Seats Available:
								</span>
								@if (@item.WaitlistCount > 0)
				{
									<strong class="seatsFull">class full, @item.WaitlistCount on waitlist</strong>
									<span class="course-updated"></span>
				}
				else
				{
									<strong class="seatsAvailable">@item.SeatsAvailable</strong>
									<span class="course-updated"><em>updated @item.LastUpdated</em> <a id="@(item.ID.ToString())">
										[update]</a></span>
				}
							</li>
				ViewBag.seatAvailbilityDisplayed = true;
																																	}




						<li class="section-notes"><span class="descriptor">Notes: </span>
						@if (@item.Footnotes != null && @item.Footnotes.Count() > 0)
			{
							<ul>
							@foreach (string note in @item.Footnotes)
				{
								<li><span class="label">@note</span></li>
				}
							</ul>
			}
						</li>
					}

					<!--end of repeat offered information -->
				</ul>
			</li>
			ViewBag.seatAvailbilityDisplayed = false;




			if (String.Compare(@ViewBag.displayedCourseNum, item.CourseNumber) < 0)
			{
				ViewBag.displayedCourseNum = item.CourseNumber;
			}


	}

	@if (ViewBag.ItemCount == 0)
	{
			<text>
			<h3>
				No classes found.</h3>
			</text>
	}
	</div>


    @if(ViewBag.TotalPages == 1 && Model.SearchResultNoSection.Count() > 0){
		Html.RenderPartial("NoSectionCourses", Model.SearchResultNoSection);
	}

	@{Html.RenderPartial("Pager");}




</div>
