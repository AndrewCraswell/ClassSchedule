@using Ctc.Ods.Types;
@using CTCClassSchedule;
@using CTCClassSchedule.Common;
@using MvcMiniProfiler;
@using System.Text.RegularExpressions;
@using System.Globalization;
@using Microsoft.Security.Application
@model CTCClassSchedule.SearchResultsModel

@{
	MiniProfiler _profiler = MiniProfiler.Current;

	// NOTE: we should always have a YearQuarter (searching all quarters is not an option)
	YearQuarter yrq = ViewBag.YearQuarter;

	int itemCount = ViewBag.ItemCount ?? 0;
	int subjectCount = ViewBag.SubjectCount ?? 0;
	String classDesc = subjectCount == 1 ? "class" : "classes";
	String sectionDesc = itemCount == 1 ? "section" : "sections";

	IDictionary<string, object> _routeValues = ViewBag.RouteValues;
	_routeValues["YearQuarterID"] = "All";

	string PreviousCourseID = string.Empty;
	string PreviousSectionID = string.Empty;
	string courseBlockClass = "";

	if (yrq.ToString() != Request.QueryString["currentQuarter"])
	{
		courseBlockClass = "course-block-past-quarter";
	}

	string _searchTerm = ViewBag.searchterm;
}
<script type="text/javascript" src="@Url.Content("~/Scripts/CtcClassSchedule.js")"></script>
<div id="scheduleMain" class="page-search">
    @Html.Partial("quarterNavigation")
    <div id="container" class="sidebar">
        <div id="sidebar">
            @Html.Partial("advancedFacetedSearch", Model.Subjects)
        </div> <!-- #sidebar -->

        <div id="content">

	@if (itemCount == 0)
 {
			<h1>No classes were found for &quot;@_searchTerm&quot;</h1>
			<p><strong>TIP:</strong> Try searching for something else, or selecting fewer <span style="background-color:#999999;color:White; padding:2px;">Refine</span> criteria to the left.</p>
 }
 else
 {
	<div id="searchHeaderInfo">
		<h1 id="searchResultsMsg">
			<strong>&quot;@_searchTerm&quot;</strong> found @itemCount @sectionDesc in @subjectCount @classDesc for @(yrq != null ? yrq.FriendlyName : "ERROR: Unknown quarter")
		</h1>
		<div id="searchPageNum">

		@if (ViewBag.TotalPages > 0)
		{
			<text>page @ViewBag.CurrentPage of @ViewBag.TotalPages</text>
		}
		</div>
	</div>
	 using (_profiler.Step("Rendering sections from search results"))
	 {
		 foreach (SectionWithSeats sec in Model.Section)
		 {
			 string courseID = sec.CourseID;
			 string sectionID = sec.ID.ToString();

			 if (PreviousCourseID != courseID)
			 {
				 _routeValues["Subject"] = sec.CourseSubject;
				 _routeValues["ClassNum"] = sec.CourseNumber;
				 if (courseID != PreviousCourseID && PreviousCourseID != "")
				 {
				@:</ul>
			 }
				<text>
		<h2 class="classHeading">
			<a href="@Url.Action("ClassDetails", "Classes", new RouteValueDictionary(_routeValues))">
				@Html.FormatWithSearchTerm(_searchTerm, "{0}{1} {2} {3} &#8226; {4} Cr.", sec.CourseSubject, sec.IsCommonCourse ? "&" : string.Empty, sec.CourseNumber, sec.CourseTitle, Html.CreditsValue(sec.Credits))
			</a>
		</h2>
		<p class="classDetails">
			@Html.ActionLink("View Class Details", "ClassDetails", "Classes", new RouteValueDictionary(_routeValues), null)
		</p>

		<p class="courseDescription">
				@Html.Raw(sec.CourseDescriptions.Count() == 0 ? "" : Html.FormatWithSearchTerm(_searchTerm, sec.CourseDescriptions[0].Description).ToString())

		</p>

		<p class="courseFootnotes">
				@Html.Raw(sec.CourseFootnotes == null ? "" : Html.FormatWithSearchTerm(_searchTerm, Encoder.HtmlEncode(sec.CourseFootnotes)).ToString())
				@if (sec.CourseDescriptions[0].Description.IndexOf("prerequisite", StringComparison.OrdinalIgnoreCase) >= 0)
        {
									<a class="footnote-prereq" href="http://bellevuecollege.edu/enrollment/transfer/prerequisites/">How to clear prerequisites?</a>
        }

		</p>

		<ul class='course-block @(courseBlockClass)'>
		</text>
			 }

			 if (sectionID != PreviousSectionID)
			 {
				 Html.RenderPartial("Sections", sec, new ViewDataDictionary { { "PreviousSectionID", PreviousSectionID } });
			 }

			 PreviousSectionID = sectionID;
			 PreviousCourseID = courseID;

		 } @* end foreach(sec) *@
	 }
 }



    @if (ViewBag.TotalPages == 1 && Model.SearchResultNoSection.Count() > 0)
		{
			Html.RenderPartial("NoSectionCourses", Model.SearchResultNoSection);
		}

	@{Html.RenderPartial("Pager");}

    </div> <!-- #content -->
    </div> <!-- #container -->
</div>
